#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SernaSistemas.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SernaSistemas")]
	public partial class SernaSistemasDataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInstitucion(Institucion instance);
    partial void UpdateInstitucion(Institucion instance);
    partial void DeleteInstitucion(Institucion instance);
    partial void InsertTipoElemento(TipoElemento instance);
    partial void UpdateTipoElemento(TipoElemento instance);
    partial void DeleteTipoElemento(TipoElemento instance);
    partial void InsertLocacion(Locacion instance);
    partial void UpdateLocacion(Locacion instance);
    partial void DeleteLocacion(Locacion instance);
    partial void InsertSistema(Sistema instance);
    partial void UpdateSistema(Sistema instance);
    partial void DeleteSistema(Sistema instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertStatusSistema(StatusSistema instance);
    partial void UpdateStatusSistema(StatusSistema instance);
    partial void DeleteStatusSistema(StatusSistema instance);
    partial void InsertPermiso(Permiso instance);
    partial void UpdatePermiso(Permiso instance);
    partial void DeletePermiso(Permiso instance);
    partial void InsertUsuarioSistema(UsuarioSistema instance);
    partial void UpdateUsuarioSistema(UsuarioSistema instance);
    partial void DeleteUsuarioSistema(UsuarioSistema instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertRolPermiso(RolPermiso instance);
    partial void UpdateRolPermiso(RolPermiso instance);
    partial void DeleteRolPermiso(RolPermiso instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertPersona_Direccion(Persona_Direccion instance);
    partial void UpdatePersona_Direccion(Persona_Direccion instance);
    partial void DeletePersona_Direccion(Persona_Direccion instance);
    partial void InsertTitulo(Titulo instance);
    partial void UpdateTitulo(Titulo instance);
    partial void DeleteTitulo(Titulo instance);
    partial void InsertPersona_Foto(Persona_Foto instance);
    partial void UpdatePersona_Foto(Persona_Foto instance);
    partial void DeletePersona_Foto(Persona_Foto instance);
    partial void InsertNombre(Nombre instance);
    partial void UpdateNombre(Nombre instance);
    partial void DeleteNombre(Nombre instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertAlumno(Alumno instance);
    partial void UpdateAlumno(Alumno instance);
    partial void DeleteAlumno(Alumno instance);
    partial void InsertValoracion(Valoracion instance);
    partial void UpdateValoracion(Valoracion instance);
    partial void DeleteValoracion(Valoracion instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertBancoPregunta(BancoPregunta instance);
    partial void UpdateBancoPregunta(BancoPregunta instance);
    partial void DeleteBancoPregunta(BancoPregunta instance);
    partial void InsertCuestionario(Cuestionario instance);
    partial void UpdateCuestionario(Cuestionario instance);
    partial void DeleteCuestionario(Cuestionario instance);
    partial void InsertDistractor(Distractor instance);
    partial void UpdateDistractor(Distractor instance);
    partial void DeleteDistractor(Distractor instance);
    partial void InsertEvaluacion(Evaluacion instance);
    partial void UpdateEvaluacion(Evaluacion instance);
    partial void DeleteEvaluacion(Evaluacion instance);
    partial void InsertExperto(Experto instance);
    partial void UpdateExperto(Experto instance);
    partial void DeleteExperto(Experto instance);
    partial void InsertExpertoArea(ExpertoArea instance);
    partial void UpdateExpertoArea(ExpertoArea instance);
    partial void DeleteExpertoArea(ExpertoArea instance);
    partial void InsertExpertoEscuela(ExpertoEscuela instance);
    partial void UpdateExpertoEscuela(ExpertoEscuela instance);
    partial void DeleteExpertoEscuela(ExpertoEscuela instance);
    partial void InsertGrupoTrabajo(GrupoTrabajo instance);
    partial void UpdateGrupoTrabajo(GrupoTrabajo instance);
    partial void DeleteGrupoTrabajo(GrupoTrabajo instance);
    partial void InsertIntegranteGrupo(IntegranteGrupo instance);
    partial void UpdateIntegranteGrupo(IntegranteGrupo instance);
    partial void DeleteIntegranteGrupo(IntegranteGrupo instance);
    partial void InsertPregunta(Pregunta instance);
    partial void UpdatePregunta(Pregunta instance);
    partial void DeletePregunta(Pregunta instance);
    partial void InsertPublicacion(Publicacion instance);
    partial void UpdatePublicacion(Publicacion instance);
    partial void DeletePublicacion(Publicacion instance);
    partial void InsertReactivo(Reactivo instance);
    partial void UpdateReactivo(Reactivo instance);
    partial void DeleteReactivo(Reactivo instance);
    partial void InsertTipo(Tipo instance);
    partial void UpdateTipo(Tipo instance);
    partial void DeleteTipo(Tipo instance);
    partial void InsertContacto(Contacto instance);
    partial void UpdateContacto(Contacto instance);
    partial void DeleteContacto(Contacto instance);
    partial void InsertElementoDireccion(ElementoDireccion instance);
    partial void UpdateElementoDireccion(ElementoDireccion instance);
    partial void DeleteElementoDireccion(ElementoDireccion instance);
    partial void InsertEtiqueta(Etiqueta instance);
    partial void UpdateEtiqueta(Etiqueta instance);
    partial void DeleteEtiqueta(Etiqueta instance);
    partial void InsertNegocio(Negocio instance);
    partial void UpdateNegocio(Negocio instance);
    partial void DeleteNegocio(Negocio instance);
    partial void InsertNegocioEtiqueta(NegocioEtiqueta instance);
    partial void UpdateNegocioEtiqueta(NegocioEtiqueta instance);
    partial void DeleteNegocioEtiqueta(NegocioEtiqueta instance);
    partial void InsertOferta(Oferta instance);
    partial void UpdateOferta(Oferta instance);
    partial void DeleteOferta(Oferta instance);
    partial void InsertTelefono(Telefono instance);
    partial void UpdateTelefono(Telefono instance);
    partial void DeleteTelefono(Telefono instance);
    partial void InsertTipoLocal(TipoLocal instance);
    partial void UpdateTipoLocal(TipoLocal instance);
    partial void DeleteTipoLocal(TipoLocal instance);
    partial void InsertTipoOferta(TipoOferta instance);
    partial void UpdateTipoOferta(TipoOferta instance);
    partial void DeleteTipoOferta(TipoOferta instance);
    #endregion
		
		public SernaSistemasDataModelDataContext() : 
				base(global::SernaSistemas.DataAccess.Properties.Settings.Default.SernaSistemasConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SernaSistemasDataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SernaSistemasDataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SernaSistemasDataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SernaSistemasDataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Institucion> Institucions
		{
			get
			{
				return this.GetTable<Institucion>();
			}
		}
		
		public System.Data.Linq.Table<TipoElemento> TipoElementos
		{
			get
			{
				return this.GetTable<TipoElemento>();
			}
		}
		
		public System.Data.Linq.Table<Locacion> Locacions
		{
			get
			{
				return this.GetTable<Locacion>();
			}
		}
		
		public System.Data.Linq.Table<Sistema> Sistemas
		{
			get
			{
				return this.GetTable<Sistema>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<StatusSistema> StatusSistemas
		{
			get
			{
				return this.GetTable<StatusSistema>();
			}
		}
		
		public System.Data.Linq.Table<Permiso> Permisos
		{
			get
			{
				return this.GetTable<Permiso>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioSistema> UsuarioSistemas
		{
			get
			{
				return this.GetTable<UsuarioSistema>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rols
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<RolPermiso> RolPermisos
		{
			get
			{
				return this.GetTable<RolPermiso>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Persona_Direccion> Persona_Direccions
		{
			get
			{
				return this.GetTable<Persona_Direccion>();
			}
		}
		
		public System.Data.Linq.Table<Titulo> Titulos
		{
			get
			{
				return this.GetTable<Titulo>();
			}
		}
		
		public System.Data.Linq.Table<Persona_Foto> Persona_Fotos
		{
			get
			{
				return this.GetTable<Persona_Foto>();
			}
		}
		
		public System.Data.Linq.Table<Nombre> Nombres
		{
			get
			{
				return this.GetTable<Nombre>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Personas
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Alumno> Alumnos
		{
			get
			{
				return this.GetTable<Alumno>();
			}
		}
		
		public System.Data.Linq.Table<Valoracion> Valoracions
		{
			get
			{
				return this.GetTable<Valoracion>();
			}
		}
		
		public System.Data.Linq.Table<Area> Areas
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<BancoPregunta> BancoPreguntas
		{
			get
			{
				return this.GetTable<BancoPregunta>();
			}
		}
		
		public System.Data.Linq.Table<Cuestionario> Cuestionarios
		{
			get
			{
				return this.GetTable<Cuestionario>();
			}
		}
		
		public System.Data.Linq.Table<Distractor> Distractors
		{
			get
			{
				return this.GetTable<Distractor>();
			}
		}
		
		public System.Data.Linq.Table<Evaluacion> Evaluacions
		{
			get
			{
				return this.GetTable<Evaluacion>();
			}
		}
		
		public System.Data.Linq.Table<Experto> Expertos
		{
			get
			{
				return this.GetTable<Experto>();
			}
		}
		
		public System.Data.Linq.Table<ExpertoArea> ExpertoAreas
		{
			get
			{
				return this.GetTable<ExpertoArea>();
			}
		}
		
		public System.Data.Linq.Table<ExpertoEscuela> ExpertoEscuelas
		{
			get
			{
				return this.GetTable<ExpertoEscuela>();
			}
		}
		
		public System.Data.Linq.Table<GrupoTrabajo> GrupoTrabajos
		{
			get
			{
				return this.GetTable<GrupoTrabajo>();
			}
		}
		
		public System.Data.Linq.Table<IntegranteGrupo> IntegranteGrupos
		{
			get
			{
				return this.GetTable<IntegranteGrupo>();
			}
		}
		
		public System.Data.Linq.Table<Pregunta> Preguntas
		{
			get
			{
				return this.GetTable<Pregunta>();
			}
		}
		
		public System.Data.Linq.Table<Publicacion> Publicacions
		{
			get
			{
				return this.GetTable<Publicacion>();
			}
		}
		
		public System.Data.Linq.Table<Reactivo> Reactivos
		{
			get
			{
				return this.GetTable<Reactivo>();
			}
		}
		
		public System.Data.Linq.Table<Tipo> Tipos
		{
			get
			{
				return this.GetTable<Tipo>();
			}
		}
		
		public System.Data.Linq.Table<Contacto> Contactos
		{
			get
			{
				return this.GetTable<Contacto>();
			}
		}
		
		public System.Data.Linq.Table<ElementoDireccion> ElementoDireccions
		{
			get
			{
				return this.GetTable<ElementoDireccion>();
			}
		}
		
		public System.Data.Linq.Table<Etiqueta> Etiquetas
		{
			get
			{
				return this.GetTable<Etiqueta>();
			}
		}
		
		public System.Data.Linq.Table<Negocio> Negocios
		{
			get
			{
				return this.GetTable<Negocio>();
			}
		}
		
		public System.Data.Linq.Table<NegocioEtiqueta> NegocioEtiquetas
		{
			get
			{
				return this.GetTable<NegocioEtiqueta>();
			}
		}
		
		public System.Data.Linq.Table<Oferta> Ofertas
		{
			get
			{
				return this.GetTable<Oferta>();
			}
		}
		
		public System.Data.Linq.Table<Telefono> Telefonos
		{
			get
			{
				return this.GetTable<Telefono>();
			}
		}
		
		public System.Data.Linq.Table<TipoLocal> TipoLocals
		{
			get
			{
				return this.GetTable<TipoLocal>();
			}
		}
		
		public System.Data.Linq.Table<TipoOferta> TipoOfertas
		{
			get
			{
				return this.GetTable<TipoOferta>();
			}
		}
		
		public System.Data.Linq.Table<vUsuariosSistema> vUsuariosSistemas
		{
			get
			{
				return this.GetTable<vUsuariosSistema>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Configuracion.Institucion")]
	public partial class Institucion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private System.Nullable<int> _IdLocacion;
		
		private EntitySet<Titulo> _Titulos;
		
		private EntitySet<Alumno> _Alumnos;
		
		private EntitySet<ExpertoEscuela> _ExpertoEscuelas;
		
		private EntityRef<Locacion> _Locacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnIdLocacionChanging(System.Nullable<int> value);
    partial void OnIdLocacionChanged();
    #endregion
		
		public Institucion()
		{
			this._Titulos = new EntitySet<Titulo>(new Action<Titulo>(this.attach_Titulos), new Action<Titulo>(this.detach_Titulos));
			this._Alumnos = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumnos), new Action<Alumno>(this.detach_Alumnos));
			this._ExpertoEscuelas = new EntitySet<ExpertoEscuela>(new Action<ExpertoEscuela>(this.attach_ExpertoEscuelas), new Action<ExpertoEscuela>(this.detach_ExpertoEscuelas));
			this._Locacion = default(EntityRef<Locacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLocacion", DbType="Int")]
		public System.Nullable<int> IdLocacion
		{
			get
			{
				return this._IdLocacion;
			}
			set
			{
				if ((this._IdLocacion != value))
				{
					if (this._Locacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLocacionChanging(value);
					this.SendPropertyChanging();
					this._IdLocacion = value;
					this.SendPropertyChanged("IdLocacion");
					this.OnIdLocacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_Titulo", Storage="_Titulos", ThisKey="Id", OtherKey="IdInstitucion")]
		public EntitySet<Titulo> Titulos
		{
			get
			{
				return this._Titulos;
			}
			set
			{
				this._Titulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_Alumno", Storage="_Alumnos", ThisKey="Id", OtherKey="IdInstitucion")]
		public EntitySet<Alumno> Alumnos
		{
			get
			{
				return this._Alumnos;
			}
			set
			{
				this._Alumnos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_ExpertoEscuela", Storage="_ExpertoEscuelas", ThisKey="Id", OtherKey="IdInstitucion")]
		public EntitySet<ExpertoEscuela> ExpertoEscuelas
		{
			get
			{
				return this._ExpertoEscuelas;
			}
			set
			{
				this._ExpertoEscuelas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locacion_Institucion", Storage="_Locacion", ThisKey="IdLocacion", OtherKey="Id", IsForeignKey=true)]
		public Locacion Locacion
		{
			get
			{
				return this._Locacion.Entity;
			}
			set
			{
				Locacion previousValue = this._Locacion.Entity;
				if (((previousValue != value) 
							|| (this._Locacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Locacion.Entity = null;
						previousValue.Institucions.Remove(this);
					}
					this._Locacion.Entity = value;
					if ((value != null))
					{
						value.Institucions.Add(this);
						this._IdLocacion = value.Id;
					}
					else
					{
						this._IdLocacion = default(Nullable<int>);
					}
					this.SendPropertyChanged("Locacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Titulos(Titulo entity)
		{
			this.SendPropertyChanging();
			entity.Institucion = this;
		}
		
		private void detach_Titulos(Titulo entity)
		{
			this.SendPropertyChanging();
			entity.Institucion = null;
		}
		
		private void attach_Alumnos(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.Institucion = this;
		}
		
		private void detach_Alumnos(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.Institucion = null;
		}
		
		private void attach_ExpertoEscuelas(ExpertoEscuela entity)
		{
			this.SendPropertyChanging();
			entity.Institucion = this;
		}
		
		private void detach_ExpertoEscuelas(ExpertoEscuela entity)
		{
			this.SendPropertyChanging();
			entity.Institucion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Configuracion.TipoElemento")]
	public partial class TipoElemento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private EntitySet<Persona_Direccion> _Direccions;
		
		private EntitySet<ElementoDireccion> _ElementoDireccions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoElemento()
		{
			this._Direccions = new EntitySet<Persona_Direccion>(new Action<Persona_Direccion>(this.attach_Direccions), new Action<Persona_Direccion>(this.detach_Direccions));
			this._ElementoDireccions = new EntitySet<ElementoDireccion>(new Action<ElementoDireccion>(this.attach_ElementoDireccions), new Action<ElementoDireccion>(this.detach_ElementoDireccions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoElemento_Direccion", Storage="_Direccions", ThisKey="Id", OtherKey="IdTipoElemento")]
		public EntitySet<Persona_Direccion> Persona_Direccions
		{
			get
			{
				return this._Direccions;
			}
			set
			{
				this._Direccions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoElemento_ElementoDireccion", Storage="_ElementoDireccions", ThisKey="Id", OtherKey="IdTipoElemento")]
		public EntitySet<ElementoDireccion> ElementoDireccions
		{
			get
			{
				return this._ElementoDireccions;
			}
			set
			{
				this._ElementoDireccions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direccions(Persona_Direccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoElemento = this;
		}
		
		private void detach_Direccions(Persona_Direccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoElemento = null;
		}
		
		private void attach_ElementoDireccions(ElementoDireccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoElemento = this;
		}
		
		private void detach_ElementoDireccions(ElementoDireccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoElemento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Configuracion.Locacion")]
	public partial class Locacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Lat;
		
		private string _Lon;
		
		private EntitySet<Institucion> _Institucions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnLatChanging(string value);
    partial void OnLatChanged();
    partial void OnLonChanging(string value);
    partial void OnLonChanged();
    #endregion
		
		public Locacion()
		{
			this._Institucions = new EntitySet<Institucion>(new Action<Institucion>(this.attach_Institucions), new Action<Institucion>(this.detach_Institucions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lon", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Lon
		{
			get
			{
				return this._Lon;
			}
			set
			{
				if ((this._Lon != value))
				{
					this.OnLonChanging(value);
					this.SendPropertyChanging();
					this._Lon = value;
					this.SendPropertyChanged("Lon");
					this.OnLonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locacion_Institucion", Storage="_Institucions", ThisKey="Id", OtherKey="IdLocacion")]
		public EntitySet<Institucion> Institucions
		{
			get
			{
				return this._Institucions;
			}
			set
			{
				this._Institucions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Institucions(Institucion entity)
		{
			this.SendPropertyChanging();
			entity.Locacion = this;
		}
		
		private void detach_Institucions(Institucion entity)
		{
			this.SendPropertyChanging();
			entity.Locacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Configuracion.Sistema")]
	public partial class Sistema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _URL;
		
		private EntitySet<StatusSistema> _StatusSistemas;
		
		private EntitySet<Permiso> _Permisos;
		
		private EntitySet<UsuarioSistema> _UsuarioSistemas;
		
		private EntitySet<Rol> _Rols;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public Sistema()
		{
			this._StatusSistemas = new EntitySet<StatusSistema>(new Action<StatusSistema>(this.attach_StatusSistemas), new Action<StatusSistema>(this.detach_StatusSistemas));
			this._Permisos = new EntitySet<Permiso>(new Action<Permiso>(this.attach_Permisos), new Action<Permiso>(this.detach_Permisos));
			this._UsuarioSistemas = new EntitySet<UsuarioSistema>(new Action<UsuarioSistema>(this.attach_UsuarioSistemas), new Action<UsuarioSistema>(this.detach_UsuarioSistemas));
			this._Rols = new EntitySet<Rol>(new Action<Rol>(this.attach_Rols), new Action<Rol>(this.detach_Rols));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_StatusSistema", Storage="_StatusSistemas", ThisKey="Id", OtherKey="IdSistema")]
		public EntitySet<StatusSistema> StatusSistemas
		{
			get
			{
				return this._StatusSistemas;
			}
			set
			{
				this._StatusSistemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_Permiso", Storage="_Permisos", ThisKey="Id", OtherKey="IdSistema")]
		public EntitySet<Permiso> Permisos
		{
			get
			{
				return this._Permisos;
			}
			set
			{
				this._Permisos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_UsuarioSistema", Storage="_UsuarioSistemas", ThisKey="Id", OtherKey="IdSistema")]
		public EntitySet<UsuarioSistema> UsuarioSistemas
		{
			get
			{
				return this._UsuarioSistemas;
			}
			set
			{
				this._UsuarioSistemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_Rol", Storage="_Rols", ThisKey="Id", OtherKey="IdSistema")]
		public EntitySet<Rol> Rols
		{
			get
			{
				return this._Rols;
			}
			set
			{
				this._Rols.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StatusSistemas(StatusSistema entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = this;
		}
		
		private void detach_StatusSistemas(StatusSistema entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = null;
		}
		
		private void attach_Permisos(Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = this;
		}
		
		private void detach_Permisos(Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = null;
		}
		
		private void attach_UsuarioSistemas(UsuarioSistema entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = this;
		}
		
		private void detach_UsuarioSistemas(UsuarioSistema entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = null;
		}
		
		private void attach_Rols(Rol entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = this;
		}
		
		private void detach_Rols(Rol entity)
		{
			this.SendPropertyChanging();
			entity.Sistema = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Configuracion.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<StatusSistema> _StatusSistemas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Status()
		{
			this._StatusSistemas = new EntitySet<StatusSistema>(new Action<StatusSistema>(this.attach_StatusSistemas), new Action<StatusSistema>(this.detach_StatusSistemas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_StatusSistema", Storage="_StatusSistemas", ThisKey="Id", OtherKey="IdStatus")]
		public EntitySet<StatusSistema> StatusSistemas
		{
			get
			{
				return this._StatusSistemas;
			}
			set
			{
				this._StatusSistemas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StatusSistemas(StatusSistema entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_StatusSistemas(StatusSistema entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Configuracion.StatusSistema")]
	public partial class StatusSistema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdSistema;
		
		private int _IdStatus;
		
		private string _Descripcion;
		
		private EntitySet<Alumno> _Alumnos;
		
		private EntitySet<BancoPregunta> _BancoPreguntas;
		
		private EntitySet<Experto> _Expertos;
		
		private EntitySet<IntegranteGrupo> _IntegranteGrupos;
		
		private EntitySet<Pregunta> _Preguntas;
		
		private EntitySet<Publicacion> _Publicacions;
		
		private EntitySet<Negocio> _Negocios;
		
		private EntitySet<Oferta> _Ofertas;
		
		private EntitySet<Telefono> _Telefonos;
		
		private EntityRef<Sistema> _Sistema;
		
		private EntityRef<Status> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdSistemaChanging(int value);
    partial void OnIdSistemaChanged();
    partial void OnIdStatusChanging(int value);
    partial void OnIdStatusChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public StatusSistema()
		{
			this._Alumnos = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumnos), new Action<Alumno>(this.detach_Alumnos));
			this._BancoPreguntas = new EntitySet<BancoPregunta>(new Action<BancoPregunta>(this.attach_BancoPreguntas), new Action<BancoPregunta>(this.detach_BancoPreguntas));
			this._Expertos = new EntitySet<Experto>(new Action<Experto>(this.attach_Expertos), new Action<Experto>(this.detach_Expertos));
			this._IntegranteGrupos = new EntitySet<IntegranteGrupo>(new Action<IntegranteGrupo>(this.attach_IntegranteGrupos), new Action<IntegranteGrupo>(this.detach_IntegranteGrupos));
			this._Preguntas = new EntitySet<Pregunta>(new Action<Pregunta>(this.attach_Preguntas), new Action<Pregunta>(this.detach_Preguntas));
			this._Publicacions = new EntitySet<Publicacion>(new Action<Publicacion>(this.attach_Publicacions), new Action<Publicacion>(this.detach_Publicacions));
			this._Negocios = new EntitySet<Negocio>(new Action<Negocio>(this.attach_Negocios), new Action<Negocio>(this.detach_Negocios));
			this._Ofertas = new EntitySet<Oferta>(new Action<Oferta>(this.attach_Ofertas), new Action<Oferta>(this.detach_Ofertas));
			this._Telefonos = new EntitySet<Telefono>(new Action<Telefono>(this.attach_Telefonos), new Action<Telefono>(this.detach_Telefonos));
			this._Sistema = default(EntityRef<Sistema>);
			this._Status = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSistema", DbType="Int NOT NULL")]
		public int IdSistema
		{
			get
			{
				return this._IdSistema;
			}
			set
			{
				if ((this._IdSistema != value))
				{
					if (this._Sistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdSistema = value;
					this.SendPropertyChanged("IdSistema");
					this.OnIdSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatus", DbType="Int NOT NULL")]
		public int IdStatus
		{
			get
			{
				return this._IdStatus;
			}
			set
			{
				if ((this._IdStatus != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusChanging(value);
					this.SendPropertyChanging();
					this._IdStatus = value;
					this.SendPropertyChanged("IdStatus");
					this.OnIdStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Alumno", Storage="_Alumnos", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<Alumno> Alumnos
		{
			get
			{
				return this._Alumnos;
			}
			set
			{
				this._Alumnos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_BancoPregunta", Storage="_BancoPreguntas", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<BancoPregunta> BancoPreguntas
		{
			get
			{
				return this._BancoPreguntas;
			}
			set
			{
				this._BancoPreguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Experto", Storage="_Expertos", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<Experto> Expertos
		{
			get
			{
				return this._Expertos;
			}
			set
			{
				this._Expertos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_IntegranteGrupo", Storage="_IntegranteGrupos", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<IntegranteGrupo> IntegranteGrupos
		{
			get
			{
				return this._IntegranteGrupos;
			}
			set
			{
				this._IntegranteGrupos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Pregunta", Storage="_Preguntas", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<Pregunta> Preguntas
		{
			get
			{
				return this._Preguntas;
			}
			set
			{
				this._Preguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Publicacion", Storage="_Publicacions", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<Publicacion> Publicacions
		{
			get
			{
				return this._Publicacions;
			}
			set
			{
				this._Publicacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Negocio", Storage="_Negocios", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<Negocio> Negocios
		{
			get
			{
				return this._Negocios;
			}
			set
			{
				this._Negocios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Oferta", Storage="_Ofertas", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<Oferta> Ofertas
		{
			get
			{
				return this._Ofertas;
			}
			set
			{
				this._Ofertas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Telefono", Storage="_Telefonos", ThisKey="Id", OtherKey="IdStatusSistema")]
		public EntitySet<Telefono> Telefonos
		{
			get
			{
				return this._Telefonos;
			}
			set
			{
				this._Telefonos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_StatusSistema", Storage="_Sistema", ThisKey="IdSistema", OtherKey="Id", IsForeignKey=true)]
		public Sistema Sistema
		{
			get
			{
				return this._Sistema.Entity;
			}
			set
			{
				Sistema previousValue = this._Sistema.Entity;
				if (((previousValue != value) 
							|| (this._Sistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sistema.Entity = null;
						previousValue.StatusSistemas.Remove(this);
					}
					this._Sistema.Entity = value;
					if ((value != null))
					{
						value.StatusSistemas.Add(this);
						this._IdSistema = value.Id;
					}
					else
					{
						this._IdSistema = default(int);
					}
					this.SendPropertyChanged("Sistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_StatusSistema", Storage="_Status", ThisKey="IdStatus", OtherKey="Id", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.StatusSistemas.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.StatusSistemas.Add(this);
						this._IdStatus = value.Id;
					}
					else
					{
						this._IdStatus = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumnos(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_Alumnos(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_BancoPreguntas(BancoPregunta entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_BancoPreguntas(BancoPregunta entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_Expertos(Experto entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_Expertos(Experto entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_IntegranteGrupos(IntegranteGrupo entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_IntegranteGrupos(IntegranteGrupo entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_Preguntas(Pregunta entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_Preguntas(Pregunta entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_Publicacions(Publicacion entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_Publicacions(Publicacion entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_Negocios(Negocio entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_Negocios(Negocio entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_Ofertas(Oferta entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_Ofertas(Oferta entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
		
		private void attach_Telefonos(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = this;
		}
		
		private void detach_Telefonos(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.StatusSistema = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.Permiso")]
	public partial class Permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdSistema;
		
		private string _Nombre;
		
		private EntitySet<RolPermiso> _RolPermisos;
		
		private EntityRef<Sistema> _Sistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdSistemaChanging(int value);
    partial void OnIdSistemaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Permiso()
		{
			this._RolPermisos = new EntitySet<RolPermiso>(new Action<RolPermiso>(this.attach_RolPermisos), new Action<RolPermiso>(this.detach_RolPermisos));
			this._Sistema = default(EntityRef<Sistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSistema", DbType="Int NOT NULL")]
		public int IdSistema
		{
			get
			{
				return this._IdSistema;
			}
			set
			{
				if ((this._IdSistema != value))
				{
					if (this._Sistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdSistema = value;
					this.SendPropertyChanged("IdSistema");
					this.OnIdSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_RolPermiso", Storage="_RolPermisos", ThisKey="Id", OtherKey="IdPermiso")]
		public EntitySet<RolPermiso> RolPermisos
		{
			get
			{
				return this._RolPermisos;
			}
			set
			{
				this._RolPermisos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_Permiso", Storage="_Sistema", ThisKey="IdSistema", OtherKey="Id", IsForeignKey=true)]
		public Sistema Sistema
		{
			get
			{
				return this._Sistema.Entity;
			}
			set
			{
				Sistema previousValue = this._Sistema.Entity;
				if (((previousValue != value) 
							|| (this._Sistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sistema.Entity = null;
						previousValue.Permisos.Remove(this);
					}
					this._Sistema.Entity = value;
					if ((value != null))
					{
						value.Permisos.Add(this);
						this._IdSistema = value.Id;
					}
					else
					{
						this._IdSistema = default(int);
					}
					this.SendPropertyChanged("Sistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolPermisos(RolPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = this;
		}
		
		private void detach_RolPermisos(RolPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.UsuarioSistema")]
	public partial class UsuarioSistema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private int _IdSistema;
		
		private int _IdRol;
		
		private EntitySet<Alumno> _Alumnos;
		
		private EntitySet<Experto> _Expertos;
		
		private EntitySet<Negocio> _Negocios;
		
		private EntityRef<Sistema> _Sistema;
		
		private EntityRef<Rol> _Rol;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdSistemaChanging(int value);
    partial void OnIdSistemaChanged();
    partial void OnIdRolChanging(int value);
    partial void OnIdRolChanged();
    #endregion
		
		public UsuarioSistema()
		{
			this._Alumnos = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumnos), new Action<Alumno>(this.detach_Alumnos));
			this._Expertos = new EntitySet<Experto>(new Action<Experto>(this.attach_Expertos), new Action<Experto>(this.detach_Expertos));
			this._Negocios = new EntitySet<Negocio>(new Action<Negocio>(this.attach_Negocios), new Action<Negocio>(this.detach_Negocios));
			this._Sistema = default(EntityRef<Sistema>);
			this._Rol = default(EntityRef<Rol>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSistema", DbType="Int NOT NULL")]
		public int IdSistema
		{
			get
			{
				return this._IdSistema;
			}
			set
			{
				if ((this._IdSistema != value))
				{
					if (this._Sistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdSistema = value;
					this.SendPropertyChanged("IdSistema");
					this.OnIdSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", DbType="Int NOT NULL")]
		public int IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioSistema_Alumno", Storage="_Alumnos", ThisKey="Id", OtherKey="IdUsuarioSistema")]
		public EntitySet<Alumno> Alumnos
		{
			get
			{
				return this._Alumnos;
			}
			set
			{
				this._Alumnos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioSistema_Experto", Storage="_Expertos", ThisKey="Id", OtherKey="IdUsuarioSistema")]
		public EntitySet<Experto> Expertos
		{
			get
			{
				return this._Expertos;
			}
			set
			{
				this._Expertos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioSistema_Negocio", Storage="_Negocios", ThisKey="Id", OtherKey="IdPropietario")]
		public EntitySet<Negocio> Negocios
		{
			get
			{
				return this._Negocios;
			}
			set
			{
				this._Negocios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_UsuarioSistema", Storage="_Sistema", ThisKey="IdSistema", OtherKey="Id", IsForeignKey=true)]
		public Sistema Sistema
		{
			get
			{
				return this._Sistema.Entity;
			}
			set
			{
				Sistema previousValue = this._Sistema.Entity;
				if (((previousValue != value) 
							|| (this._Sistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sistema.Entity = null;
						previousValue.UsuarioSistemas.Remove(this);
					}
					this._Sistema.Entity = value;
					if ((value != null))
					{
						value.UsuarioSistemas.Add(this);
						this._IdSistema = value.Id;
					}
					else
					{
						this._IdSistema = default(int);
					}
					this.SendPropertyChanged("Sistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioSistema", Storage="_Rol", ThisKey="IdRol", OtherKey="Id", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.UsuarioSistemas.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.UsuarioSistemas.Add(this);
						this._IdRol = value.Id;
					}
					else
					{
						this._IdRol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioSistema", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UsuarioSistemas.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UsuarioSistemas.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumnos(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioSistema = this;
		}
		
		private void detach_Alumnos(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioSistema = null;
		}
		
		private void attach_Expertos(Experto entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioSistema = this;
		}
		
		private void detach_Expertos(Experto entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioSistema = null;
		}
		
		private void attach_Negocios(Negocio entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioSistema = this;
		}
		
		private void detach_Negocios(Negocio entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioSistema = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdSistema;
		
		private string _Nombre;
		
		private EntitySet<UsuarioSistema> _UsuarioSistemas;
		
		private EntitySet<RolPermiso> _RolPermisos;
		
		private EntityRef<Sistema> _Sistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdSistemaChanging(int value);
    partial void OnIdSistemaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Rol()
		{
			this._UsuarioSistemas = new EntitySet<UsuarioSistema>(new Action<UsuarioSistema>(this.attach_UsuarioSistemas), new Action<UsuarioSistema>(this.detach_UsuarioSistemas));
			this._RolPermisos = new EntitySet<RolPermiso>(new Action<RolPermiso>(this.attach_RolPermisos), new Action<RolPermiso>(this.detach_RolPermisos));
			this._Sistema = default(EntityRef<Sistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSistema", DbType="Int NOT NULL")]
		public int IdSistema
		{
			get
			{
				return this._IdSistema;
			}
			set
			{
				if ((this._IdSistema != value))
				{
					if (this._Sistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdSistema = value;
					this.SendPropertyChanged("IdSistema");
					this.OnIdSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioSistema", Storage="_UsuarioSistemas", ThisKey="Id", OtherKey="IdRol")]
		public EntitySet<UsuarioSistema> UsuarioSistemas
		{
			get
			{
				return this._UsuarioSistemas;
			}
			set
			{
				this._UsuarioSistemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_RolPermiso", Storage="_RolPermisos", ThisKey="Id", OtherKey="IdRol")]
		public EntitySet<RolPermiso> RolPermisos
		{
			get
			{
				return this._RolPermisos;
			}
			set
			{
				this._RolPermisos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sistema_Rol", Storage="_Sistema", ThisKey="IdSistema", OtherKey="Id", IsForeignKey=true)]
		public Sistema Sistema
		{
			get
			{
				return this._Sistema.Entity;
			}
			set
			{
				Sistema previousValue = this._Sistema.Entity;
				if (((previousValue != value) 
							|| (this._Sistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sistema.Entity = null;
						previousValue.Rols.Remove(this);
					}
					this._Sistema.Entity = value;
					if ((value != null))
					{
						value.Rols.Add(this);
						this._IdSistema = value.Id;
					}
					else
					{
						this._IdSistema = default(int);
					}
					this.SendPropertyChanged("Sistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsuarioSistemas(UsuarioSistema entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_UsuarioSistemas(UsuarioSistema entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
		
		private void attach_RolPermisos(RolPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_RolPermisos(RolPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.RolPermiso")]
	public partial class RolPermiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdRol;
		
		private int _IdPermiso;
		
		private bool _Permitido;
		
		private bool _Denegado;
		
		private EntityRef<Permiso> _Permiso;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdRolChanging(int value);
    partial void OnIdRolChanged();
    partial void OnIdPermisoChanging(int value);
    partial void OnIdPermisoChanged();
    partial void OnPermitidoChanging(bool value);
    partial void OnPermitidoChanged();
    partial void OnDenegadoChanging(bool value);
    partial void OnDenegadoChanged();
    #endregion
		
		public RolPermiso()
		{
			this._Permiso = default(EntityRef<Permiso>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", DbType="Int NOT NULL")]
		public int IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermiso", DbType="Int NOT NULL")]
		public int IdPermiso
		{
			get
			{
				return this._IdPermiso;
			}
			set
			{
				if ((this._IdPermiso != value))
				{
					if (this._Permiso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdPermiso = value;
					this.SendPropertyChanged("IdPermiso");
					this.OnIdPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permitido", DbType="Bit NOT NULL")]
		public bool Permitido
		{
			get
			{
				return this._Permitido;
			}
			set
			{
				if ((this._Permitido != value))
				{
					this.OnPermitidoChanging(value);
					this.SendPropertyChanging();
					this._Permitido = value;
					this.SendPropertyChanged("Permitido");
					this.OnPermitidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denegado", DbType="Bit NOT NULL")]
		public bool Denegado
		{
			get
			{
				return this._Denegado;
			}
			set
			{
				if ((this._Denegado != value))
				{
					this.OnDenegadoChanging(value);
					this.SendPropertyChanging();
					this._Denegado = value;
					this.SendPropertyChanged("Denegado");
					this.OnDenegadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_RolPermiso", Storage="_Permiso", ThisKey="IdPermiso", OtherKey="Id", IsForeignKey=true)]
		public Permiso Permiso
		{
			get
			{
				return this._Permiso.Entity;
			}
			set
			{
				Permiso previousValue = this._Permiso.Entity;
				if (((previousValue != value) 
							|| (this._Permiso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permiso.Entity = null;
						previousValue.RolPermisos.Remove(this);
					}
					this._Permiso.Entity = value;
					if ((value != null))
					{
						value.RolPermisos.Add(this);
						this._IdPermiso = value.Id;
					}
					else
					{
						this._IdPermiso = default(int);
					}
					this.SendPropertyChanged("Permiso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_RolPermiso", Storage="_Rol", ThisKey="IdRol", OtherKey="Id", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.RolPermisos.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.RolPermisos.Add(this);
						this._IdRol = value.Id;
					}
					else
					{
						this._IdRol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Usuario1;
		
		private string _Passwd;
		
		private EntitySet<UsuarioSistema> _UsuarioSistemas;
		
		private EntitySet<Persona> _Personas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnPasswdChanging(string value);
    partial void OnPasswdChanged();
    #endregion
		
		public Usuario()
		{
			this._UsuarioSistemas = new EntitySet<UsuarioSistema>(new Action<UsuarioSistema>(this.attach_UsuarioSistemas), new Action<UsuarioSistema>(this.detach_UsuarioSistemas));
			this._Personas = new EntitySet<Persona>(new Action<Persona>(this.attach_Personas), new Action<Persona>(this.detach_Personas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwd", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Passwd
		{
			get
			{
				return this._Passwd;
			}
			set
			{
				if ((this._Passwd != value))
				{
					this.OnPasswdChanging(value);
					this.SendPropertyChanging();
					this._Passwd = value;
					this.SendPropertyChanged("Passwd");
					this.OnPasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioSistema", Storage="_UsuarioSistemas", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<UsuarioSistema> UsuarioSistemas
		{
			get
			{
				return this._UsuarioSistemas;
			}
			set
			{
				this._UsuarioSistemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Persona", Storage="_Personas", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<Persona> Personas
		{
			get
			{
				return this._Personas;
			}
			set
			{
				this._Personas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsuarioSistemas(UsuarioSistema entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_UsuarioSistemas(UsuarioSistema entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Personas(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Personas(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Persona.Direccion")]
	public partial class Persona_Direccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPersona;
		
		private int _IdTipoElemento;
		
		private string _Valor;
		
		private EntityRef<TipoElemento> _TipoElemento;
		
		private EntityRef<Persona> _Persona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPersonaChanging(int value);
    partial void OnIdPersonaChanged();
    partial void OnIdTipoElementoChanging(int value);
    partial void OnIdTipoElementoChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    #endregion
		
		public Persona_Direccion()
		{
			this._TipoElemento = default(EntityRef<TipoElemento>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int NOT NULL")]
		public int IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoElemento", DbType="Int NOT NULL")]
		public int IdTipoElemento
		{
			get
			{
				return this._IdTipoElemento;
			}
			set
			{
				if ((this._IdTipoElemento != value))
				{
					if (this._TipoElemento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoElementoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoElemento = value;
					this.SendPropertyChanged("IdTipoElemento");
					this.OnIdTipoElementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoElemento_Direccion", Storage="_TipoElemento", ThisKey="IdTipoElemento", OtherKey="Id", IsForeignKey=true)]
		public TipoElemento TipoElemento
		{
			get
			{
				return this._TipoElemento.Entity;
			}
			set
			{
				TipoElemento previousValue = this._TipoElemento.Entity;
				if (((previousValue != value) 
							|| (this._TipoElemento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoElemento.Entity = null;
						previousValue.Persona_Direccions.Remove(this);
					}
					this._TipoElemento.Entity = value;
					if ((value != null))
					{
						value.Persona_Direccions.Add(this);
						this._IdTipoElemento = value.Id;
					}
					else
					{
						this._IdTipoElemento = default(int);
					}
					this.SendPropertyChanged("TipoElemento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Direccion", Storage="_Persona", ThisKey="IdPersona", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Persona_Direccions.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Persona_Direccions.Add(this);
						this._IdPersona = value.Id;
					}
					else
					{
						this._IdPersona = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Persona.Titulo")]
	public partial class Titulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPersona;
		
		private System.Nullable<int> _IdInstitucion;
		
		private string _Descripcion;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private EntityRef<Institucion> _Institucion;
		
		private EntityRef<Persona> _Persona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPersonaChanging(int value);
    partial void OnIdPersonaChanged();
    partial void OnIdInstitucionChanging(System.Nullable<int> value);
    partial void OnIdInstitucionChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    #endregion
		
		public Titulo()
		{
			this._Institucion = default(EntityRef<Institucion>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int NOT NULL")]
		public int IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInstitucion", DbType="Int")]
		public System.Nullable<int> IdInstitucion
		{
			get
			{
				return this._IdInstitucion;
			}
			set
			{
				if ((this._IdInstitucion != value))
				{
					if (this._Institucion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInstitucionChanging(value);
					this.SendPropertyChanging();
					this._IdInstitucion = value;
					this.SendPropertyChanged("IdInstitucion");
					this.OnIdInstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_Titulo", Storage="_Institucion", ThisKey="IdInstitucion", OtherKey="Id", IsForeignKey=true)]
		public Institucion Institucion
		{
			get
			{
				return this._Institucion.Entity;
			}
			set
			{
				Institucion previousValue = this._Institucion.Entity;
				if (((previousValue != value) 
							|| (this._Institucion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institucion.Entity = null;
						previousValue.Titulos.Remove(this);
					}
					this._Institucion.Entity = value;
					if ((value != null))
					{
						value.Titulos.Add(this);
						this._IdInstitucion = value.Id;
					}
					else
					{
						this._IdInstitucion = default(Nullable<int>);
					}
					this.SendPropertyChanged("Institucion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Titulo", Storage="_Persona", ThisKey="IdPersona", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Titulos.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Titulos.Add(this);
						this._IdPersona = value.Id;
					}
					else
					{
						this._IdPersona = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Persona.Foto")]
	public partial class Persona_Foto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPersona;
		
		private System.Data.Linq.Binary _Foto1;
		
		private EntityRef<Persona> _Persona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPersonaChanging(int value);
    partial void OnIdPersonaChanged();
    partial void OnFoto1Changing(System.Data.Linq.Binary value);
    partial void OnFoto1Changed();
    #endregion
		
		public Persona_Foto()
		{
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int NOT NULL")]
		public int IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Foto", Storage="_Foto1", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto1
		{
			get
			{
				return this._Foto1;
			}
			set
			{
				if ((this._Foto1 != value))
				{
					this.OnFoto1Changing(value);
					this.SendPropertyChanging();
					this._Foto1 = value;
					this.SendPropertyChanged("Foto1");
					this.OnFoto1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Foto", Storage="_Persona", ThisKey="IdPersona", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Persona_Fotos.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Persona_Fotos.Add(this);
						this._IdPersona = value.Id;
					}
					else
					{
						this._IdPersona = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Persona.Nombre")]
	public partial class Nombre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPersona;
		
		private string _Valor;
		
		private int _Orden;
		
		private EntityRef<Persona> _Persona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPersonaChanging(int value);
    partial void OnIdPersonaChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    partial void OnOrdenChanging(int value);
    partial void OnOrdenChanged();
    #endregion
		
		public Nombre()
		{
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int NOT NULL")]
		public int IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orden", DbType="Int NOT NULL")]
		public int Orden
		{
			get
			{
				return this._Orden;
			}
			set
			{
				if ((this._Orden != value))
				{
					this.OnOrdenChanging(value);
					this.SendPropertyChanging();
					this._Orden = value;
					this.SendPropertyChanged("Orden");
					this.OnOrdenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Nombre", Storage="_Persona", ThisKey="IdPersona", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Nombres.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Nombres.Add(this);
						this._IdPersona = value.Id;
					}
					else
					{
						this._IdPersona = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Persona.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private string _Correo;
		
		private string _Telefono;
		
		private System.Nullable<System.DateTime> _Nacimiento;
		
		private EntitySet<Persona_Direccion> _Direccions;
		
		private EntitySet<Titulo> _Titulos;
		
		private EntitySet<Persona_Foto> _Fotos;
		
		private EntitySet<Nombre> _Nombres;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnNacimientoChanged();
    #endregion
		
		public Persona()
		{
			this._Direccions = new EntitySet<Persona_Direccion>(new Action<Persona_Direccion>(this.attach_Direccions), new Action<Persona_Direccion>(this.detach_Direccions));
			this._Titulos = new EntitySet<Titulo>(new Action<Titulo>(this.attach_Titulos), new Action<Titulo>(this.detach_Titulos));
			this._Fotos = new EntitySet<Persona_Foto>(new Action<Persona_Foto>(this.attach_Fotos), new Action<Persona_Foto>(this.detach_Fotos));
			this._Nombres = new EntitySet<Nombre>(new Action<Nombre>(this.attach_Nombres), new Action<Nombre>(this.detach_Nombres));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> Nacimiento
		{
			get
			{
				return this._Nacimiento;
			}
			set
			{
				if ((this._Nacimiento != value))
				{
					this.OnNacimientoChanging(value);
					this.SendPropertyChanging();
					this._Nacimiento = value;
					this.SendPropertyChanged("Nacimiento");
					this.OnNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Direccion", Storage="_Direccions", ThisKey="Id", OtherKey="IdPersona")]
		public EntitySet<Persona_Direccion> Persona_Direccions
		{
			get
			{
				return this._Direccions;
			}
			set
			{
				this._Direccions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Titulo", Storage="_Titulos", ThisKey="Id", OtherKey="IdPersona")]
		public EntitySet<Titulo> Titulos
		{
			get
			{
				return this._Titulos;
			}
			set
			{
				this._Titulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Foto", Storage="_Fotos", ThisKey="Id", OtherKey="IdPersona")]
		public EntitySet<Persona_Foto> Persona_Fotos
		{
			get
			{
				return this._Fotos;
			}
			set
			{
				this._Fotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Nombre", Storage="_Nombres", ThisKey="Id", OtherKey="IdPersona")]
		public EntitySet<Nombre> Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				this._Nombres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Persona", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Personas.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Personas.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direccions(Persona_Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Direccions(Persona_Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Titulos(Titulo entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Titulos(Titulo entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Fotos(Persona_Foto entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Fotos(Persona_Foto entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Nombres(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Nombres(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Alumno")]
	public partial class Alumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuarioSistema;
		
		private int _IdInstitucion;
		
		private int _IdStatusSistema;
		
		private string _Resumen;
		
		private EntitySet<Valoracion> _Valoracions;
		
		private EntitySet<Cuestionario> _Cuestionarios;
		
		private EntitySet<IntegranteGrupo> _IntegranteGrupos;
		
		private EntitySet<Publicacion> _Publicacions;
		
		private EntityRef<Institucion> _Institucion;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
		private EntityRef<UsuarioSistema> _UsuarioSistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioSistemaChanging(int value);
    partial void OnIdUsuarioSistemaChanged();
    partial void OnIdInstitucionChanging(int value);
    partial void OnIdInstitucionChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    partial void OnResumenChanging(string value);
    partial void OnResumenChanged();
    #endregion
		
		public Alumno()
		{
			this._Valoracions = new EntitySet<Valoracion>(new Action<Valoracion>(this.attach_Valoracions), new Action<Valoracion>(this.detach_Valoracions));
			this._Cuestionarios = new EntitySet<Cuestionario>(new Action<Cuestionario>(this.attach_Cuestionarios), new Action<Cuestionario>(this.detach_Cuestionarios));
			this._IntegranteGrupos = new EntitySet<IntegranteGrupo>(new Action<IntegranteGrupo>(this.attach_IntegranteGrupos), new Action<IntegranteGrupo>(this.detach_IntegranteGrupos));
			this._Publicacions = new EntitySet<Publicacion>(new Action<Publicacion>(this.attach_Publicacions), new Action<Publicacion>(this.detach_Publicacions));
			this._Institucion = default(EntityRef<Institucion>);
			this._StatusSistema = default(EntityRef<StatusSistema>);
			this._UsuarioSistema = default(EntityRef<UsuarioSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioSistema", DbType="Int NOT NULL")]
		public int IdUsuarioSistema
		{
			get
			{
				return this._IdUsuarioSistema;
			}
			set
			{
				if ((this._IdUsuarioSistema != value))
				{
					if (this._UsuarioSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioSistema = value;
					this.SendPropertyChanged("IdUsuarioSistema");
					this.OnIdUsuarioSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInstitucion", DbType="Int NOT NULL")]
		public int IdInstitucion
		{
			get
			{
				return this._IdInstitucion;
			}
			set
			{
				if ((this._IdInstitucion != value))
				{
					if (this._Institucion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInstitucionChanging(value);
					this.SendPropertyChanging();
					this._IdInstitucion = value;
					this.SendPropertyChanged("IdInstitucion");
					this.OnIdInstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resumen", DbType="VarChar(250)")]
		public string Resumen
		{
			get
			{
				return this._Resumen;
			}
			set
			{
				if ((this._Resumen != value))
				{
					this.OnResumenChanging(value);
					this.SendPropertyChanging();
					this._Resumen = value;
					this.SendPropertyChanged("Resumen");
					this.OnResumenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Valoracion", Storage="_Valoracions", ThisKey="Id", OtherKey="IdValorador")]
		public EntitySet<Valoracion> Valoracions
		{
			get
			{
				return this._Valoracions;
			}
			set
			{
				this._Valoracions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Cuestionario", Storage="_Cuestionarios", ThisKey="Id", OtherKey="IdAlumno")]
		public EntitySet<Cuestionario> Cuestionarios
		{
			get
			{
				return this._Cuestionarios;
			}
			set
			{
				this._Cuestionarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_IntegranteGrupo", Storage="_IntegranteGrupos", ThisKey="Id", OtherKey="IdAlumno")]
		public EntitySet<IntegranteGrupo> IntegranteGrupos
		{
			get
			{
				return this._IntegranteGrupos;
			}
			set
			{
				this._IntegranteGrupos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Publicacion", Storage="_Publicacions", ThisKey="Id", OtherKey="IdAutor")]
		public EntitySet<Publicacion> Publicacions
		{
			get
			{
				return this._Publicacions;
			}
			set
			{
				this._Publicacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_Alumno", Storage="_Institucion", ThisKey="IdInstitucion", OtherKey="Id", IsForeignKey=true)]
		public Institucion Institucion
		{
			get
			{
				return this._Institucion.Entity;
			}
			set
			{
				Institucion previousValue = this._Institucion.Entity;
				if (((previousValue != value) 
							|| (this._Institucion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institucion.Entity = null;
						previousValue.Alumnos.Remove(this);
					}
					this._Institucion.Entity = value;
					if ((value != null))
					{
						value.Alumnos.Add(this);
						this._IdInstitucion = value.Id;
					}
					else
					{
						this._IdInstitucion = default(int);
					}
					this.SendPropertyChanged("Institucion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Alumno", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.Alumnos.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.Alumnos.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioSistema_Alumno", Storage="_UsuarioSistema", ThisKey="IdUsuarioSistema", OtherKey="Id", IsForeignKey=true)]
		public UsuarioSistema UsuarioSistema
		{
			get
			{
				return this._UsuarioSistema.Entity;
			}
			set
			{
				UsuarioSistema previousValue = this._UsuarioSistema.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioSistema.Entity = null;
						previousValue.Alumnos.Remove(this);
					}
					this._UsuarioSistema.Entity = value;
					if ((value != null))
					{
						value.Alumnos.Add(this);
						this._IdUsuarioSistema = value.Id;
					}
					else
					{
						this._IdUsuarioSistema = default(int);
					}
					this.SendPropertyChanged("UsuarioSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valoracions(Valoracion entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Valoracions(Valoracion entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Cuestionarios(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Cuestionarios(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_IntegranteGrupos(IntegranteGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_IntegranteGrupos(IntegranteGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Publicacions(Publicacion entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Publicacions(Publicacion entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Valoracion")]
	public partial class Valoracion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPublicacion;
		
		private int _IdValorador;
		
		private int _Valor;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Publicacion> _Publicacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPublicacionChanging(int value);
    partial void OnIdPublicacionChanged();
    partial void OnIdValoradorChanging(int value);
    partial void OnIdValoradorChanged();
    partial void OnValorChanging(int value);
    partial void OnValorChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    #endregion
		
		public Valoracion()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Publicacion = default(EntityRef<Publicacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPublicacion", DbType="Int NOT NULL")]
		public int IdPublicacion
		{
			get
			{
				return this._IdPublicacion;
			}
			set
			{
				if ((this._IdPublicacion != value))
				{
					if (this._Publicacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPublicacionChanging(value);
					this.SendPropertyChanging();
					this._IdPublicacion = value;
					this.SendPropertyChanged("IdPublicacion");
					this.OnIdPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdValorador", DbType="Int NOT NULL")]
		public int IdValorador
		{
			get
			{
				return this._IdValorador;
			}
			set
			{
				if ((this._IdValorador != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdValoradorChanging(value);
					this.SendPropertyChanging();
					this._IdValorador = value;
					this.SendPropertyChanged("IdValorador");
					this.OnIdValoradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Int NOT NULL")]
		public int Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Valoracion", Storage="_Alumno", ThisKey="IdValorador", OtherKey="Id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Valoracions.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Valoracions.Add(this);
						this._IdValorador = value.Id;
					}
					else
					{
						this._IdValorador = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicacion_Valoracion", Storage="_Publicacion", ThisKey="IdPublicacion", OtherKey="Id", IsForeignKey=true)]
		public Publicacion Publicacion
		{
			get
			{
				return this._Publicacion.Entity;
			}
			set
			{
				Publicacion previousValue = this._Publicacion.Entity;
				if (((previousValue != value) 
							|| (this._Publicacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publicacion.Entity = null;
						previousValue.Valoracions.Remove(this);
					}
					this._Publicacion.Entity = value;
					if ((value != null))
					{
						value.Valoracions.Add(this);
						this._IdPublicacion = value.Id;
					}
					else
					{
						this._IdPublicacion = default(int);
					}
					this.SendPropertyChanged("Publicacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private System.Nullable<int> _IdArea;
		
		private EntitySet<Area> _Areas;
		
		private EntitySet<BancoPregunta> _BancoPreguntas;
		
		private EntitySet<ExpertoArea> _ExpertoAreas;
		
		private EntityRef<Area> _Area1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnIdAreaChanging(System.Nullable<int> value);
    partial void OnIdAreaChanged();
    #endregion
		
		public Area()
		{
			this._Areas = new EntitySet<Area>(new Action<Area>(this.attach_Areas), new Action<Area>(this.detach_Areas));
			this._BancoPreguntas = new EntitySet<BancoPregunta>(new Action<BancoPregunta>(this.attach_BancoPreguntas), new Action<BancoPregunta>(this.detach_BancoPreguntas));
			this._ExpertoAreas = new EntitySet<ExpertoArea>(new Action<ExpertoArea>(this.attach_ExpertoAreas), new Action<ExpertoArea>(this.detach_ExpertoAreas));
			this._Area1 = default(EntityRef<Area>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArea", DbType="Int")]
		public System.Nullable<int> IdArea
		{
			get
			{
				return this._IdArea;
			}
			set
			{
				if ((this._IdArea != value))
				{
					if (this._Area1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAreaChanging(value);
					this.SendPropertyChanging();
					this._IdArea = value;
					this.SendPropertyChanged("IdArea");
					this.OnIdAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Area", Storage="_Areas", ThisKey="Id", OtherKey="IdArea")]
		public EntitySet<Area> Areas
		{
			get
			{
				return this._Areas;
			}
			set
			{
				this._Areas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_BancoPregunta", Storage="_BancoPreguntas", ThisKey="Id", OtherKey="IdArea")]
		public EntitySet<BancoPregunta> BancoPreguntas
		{
			get
			{
				return this._BancoPreguntas;
			}
			set
			{
				this._BancoPreguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_ExpertoArea", Storage="_ExpertoAreas", ThisKey="Id", OtherKey="IdArea")]
		public EntitySet<ExpertoArea> ExpertoAreas
		{
			get
			{
				return this._ExpertoAreas;
			}
			set
			{
				this._ExpertoAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Area", Storage="_Area1", ThisKey="IdArea", OtherKey="Id", IsForeignKey=true)]
		public Area Area1
		{
			get
			{
				return this._Area1.Entity;
			}
			set
			{
				Area previousValue = this._Area1.Entity;
				if (((previousValue != value) 
							|| (this._Area1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area1.Entity = null;
						previousValue.Areas.Remove(this);
					}
					this._Area1.Entity = value;
					if ((value != null))
					{
						value.Areas.Add(this);
						this._IdArea = value.Id;
					}
					else
					{
						this._IdArea = default(Nullable<int>);
					}
					this.SendPropertyChanged("Area1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Areas(Area entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = this;
		}
		
		private void detach_Areas(Area entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = null;
		}
		
		private void attach_BancoPreguntas(BancoPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_BancoPreguntas(BancoPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
		
		private void attach_ExpertoAreas(ExpertoArea entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_ExpertoAreas(ExpertoArea entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.BancoPreguntas")]
	public partial class BancoPregunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdExperto;
		
		private int _IdArea;
		
		private int _IdStatusSistema;
		
		private EntitySet<Pregunta> _Preguntas;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
		private EntityRef<Experto> _Experto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdExpertoChanging(int value);
    partial void OnIdExpertoChanged();
    partial void OnIdAreaChanging(int value);
    partial void OnIdAreaChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    #endregion
		
		public BancoPregunta()
		{
			this._Preguntas = new EntitySet<Pregunta>(new Action<Pregunta>(this.attach_Preguntas), new Action<Pregunta>(this.detach_Preguntas));
			this._Area = default(EntityRef<Area>);
			this._StatusSistema = default(EntityRef<StatusSistema>);
			this._Experto = default(EntityRef<Experto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExperto", DbType="Int NOT NULL")]
		public int IdExperto
		{
			get
			{
				return this._IdExperto;
			}
			set
			{
				if ((this._IdExperto != value))
				{
					if (this._Experto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdExpertoChanging(value);
					this.SendPropertyChanging();
					this._IdExperto = value;
					this.SendPropertyChanged("IdExperto");
					this.OnIdExpertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArea", DbType="Int NOT NULL")]
		public int IdArea
		{
			get
			{
				return this._IdArea;
			}
			set
			{
				if ((this._IdArea != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAreaChanging(value);
					this.SendPropertyChanging();
					this._IdArea = value;
					this.SendPropertyChanged("IdArea");
					this.OnIdAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BancoPregunta_Pregunta", Storage="_Preguntas", ThisKey="Id", OtherKey="IdBancoPreguntas")]
		public EntitySet<Pregunta> Preguntas
		{
			get
			{
				return this._Preguntas;
			}
			set
			{
				this._Preguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_BancoPregunta", Storage="_Area", ThisKey="IdArea", OtherKey="Id", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.BancoPreguntas.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.BancoPreguntas.Add(this);
						this._IdArea = value.Id;
					}
					else
					{
						this._IdArea = default(int);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_BancoPregunta", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.BancoPreguntas.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.BancoPreguntas.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_BancoPregunta", Storage="_Experto", ThisKey="IdExperto", OtherKey="Id", IsForeignKey=true)]
		public Experto Experto
		{
			get
			{
				return this._Experto.Entity;
			}
			set
			{
				Experto previousValue = this._Experto.Entity;
				if (((previousValue != value) 
							|| (this._Experto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Experto.Entity = null;
						previousValue.BancoPreguntas.Remove(this);
					}
					this._Experto.Entity = value;
					if ((value != null))
					{
						value.BancoPreguntas.Add(this);
						this._IdExperto = value.Id;
					}
					else
					{
						this._IdExperto = default(int);
					}
					this.SendPropertyChanged("Experto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Preguntas(Pregunta entity)
		{
			this.SendPropertyChanging();
			entity.BancoPregunta = this;
		}
		
		private void detach_Preguntas(Pregunta entity)
		{
			this.SendPropertyChanging();
			entity.BancoPregunta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Cuestionario")]
	public partial class Cuestionario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdAlumno;
		
		private int _IdTipo;
		
		private System.DateTime _Inicio;
		
		private System.Nullable<System.DateTime> _Termina;
		
		private int _Aciertos;
		
		private int _Fallos;
		
		private EntitySet<Reactivo> _Reactivos;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Tipo> _Tipo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdAlumnoChanging(int value);
    partial void OnIdAlumnoChanged();
    partial void OnIdTipoChanging(int value);
    partial void OnIdTipoChanged();
    partial void OnInicioChanging(System.DateTime value);
    partial void OnInicioChanged();
    partial void OnTerminaChanging(System.Nullable<System.DateTime> value);
    partial void OnTerminaChanged();
    partial void OnAciertosChanging(int value);
    partial void OnAciertosChanged();
    partial void OnFallosChanging(int value);
    partial void OnFallosChanged();
    #endregion
		
		public Cuestionario()
		{
			this._Reactivos = new EntitySet<Reactivo>(new Action<Reactivo>(this.attach_Reactivos), new Action<Reactivo>(this.detach_Reactivos));
			this._Alumno = default(EntityRef<Alumno>);
			this._Tipo = default(EntityRef<Tipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAlumno", DbType="Int NOT NULL")]
		public int IdAlumno
		{
			get
			{
				return this._IdAlumno;
			}
			set
			{
				if ((this._IdAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAlumnoChanging(value);
					this.SendPropertyChanging();
					this._IdAlumno = value;
					this.SendPropertyChanged("IdAlumno");
					this.OnIdAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipo", DbType="Int NOT NULL")]
		public int IdTipo
		{
			get
			{
				return this._IdTipo;
			}
			set
			{
				if ((this._IdTipo != value))
				{
					if (this._Tipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoChanging(value);
					this.SendPropertyChanging();
					this._IdTipo = value;
					this.SendPropertyChanged("IdTipo");
					this.OnIdTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inicio", DbType="DateTime NOT NULL")]
		public System.DateTime Inicio
		{
			get
			{
				return this._Inicio;
			}
			set
			{
				if ((this._Inicio != value))
				{
					this.OnInicioChanging(value);
					this.SendPropertyChanging();
					this._Inicio = value;
					this.SendPropertyChanged("Inicio");
					this.OnInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Termina", DbType="DateTime")]
		public System.Nullable<System.DateTime> Termina
		{
			get
			{
				return this._Termina;
			}
			set
			{
				if ((this._Termina != value))
				{
					this.OnTerminaChanging(value);
					this.SendPropertyChanging();
					this._Termina = value;
					this.SendPropertyChanged("Termina");
					this.OnTerminaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciertos", DbType="Int NOT NULL")]
		public int Aciertos
		{
			get
			{
				return this._Aciertos;
			}
			set
			{
				if ((this._Aciertos != value))
				{
					this.OnAciertosChanging(value);
					this.SendPropertyChanging();
					this._Aciertos = value;
					this.SendPropertyChanged("Aciertos");
					this.OnAciertosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fallos", DbType="Int NOT NULL")]
		public int Fallos
		{
			get
			{
				return this._Fallos;
			}
			set
			{
				if ((this._Fallos != value))
				{
					this.OnFallosChanging(value);
					this.SendPropertyChanging();
					this._Fallos = value;
					this.SendPropertyChanged("Fallos");
					this.OnFallosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cuestionario_Reactivo", Storage="_Reactivos", ThisKey="Id", OtherKey="IdCuestionario")]
		public EntitySet<Reactivo> Reactivos
		{
			get
			{
				return this._Reactivos;
			}
			set
			{
				this._Reactivos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Cuestionario", Storage="_Alumno", ThisKey="IdAlumno", OtherKey="Id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Cuestionarios.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Cuestionarios.Add(this);
						this._IdAlumno = value.Id;
					}
					else
					{
						this._IdAlumno = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Cuestionario", Storage="_Tipo", ThisKey="IdTipo", OtherKey="Id", IsForeignKey=true)]
		public Tipo Tipo
		{
			get
			{
				return this._Tipo.Entity;
			}
			set
			{
				Tipo previousValue = this._Tipo.Entity;
				if (((previousValue != value) 
							|| (this._Tipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo.Entity = null;
						previousValue.Cuestionarios.Remove(this);
					}
					this._Tipo.Entity = value;
					if ((value != null))
					{
						value.Cuestionarios.Add(this);
						this._IdTipo = value.Id;
					}
					else
					{
						this._IdTipo = default(int);
					}
					this.SendPropertyChanged("Tipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reactivos(Reactivo entity)
		{
			this.SendPropertyChanging();
			entity.Cuestionario = this;
		}
		
		private void detach_Reactivos(Reactivo entity)
		{
			this.SendPropertyChanging();
			entity.Cuestionario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Distractor")]
	public partial class Distractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPregunta;
		
		private string _Distractor1;
		
		private System.Nullable<bool> _EsCorrecta;
		
		private System.Nullable<bool> _EsOptima;
		
		private EntitySet<Reactivo> _Reactivos;
		
		private EntityRef<Pregunta> _Pregunta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPreguntaChanging(int value);
    partial void OnIdPreguntaChanged();
    partial void OnDistractor1Changing(string value);
    partial void OnDistractor1Changed();
    partial void OnEsCorrectaChanging(System.Nullable<bool> value);
    partial void OnEsCorrectaChanged();
    partial void OnEsOptimaChanging(System.Nullable<bool> value);
    partial void OnEsOptimaChanged();
    #endregion
		
		public Distractor()
		{
			this._Reactivos = new EntitySet<Reactivo>(new Action<Reactivo>(this.attach_Reactivos), new Action<Reactivo>(this.detach_Reactivos));
			this._Pregunta = default(EntityRef<Pregunta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="Int NOT NULL")]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					if (this._Pregunta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Distractor", Storage="_Distractor1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Distractor1
		{
			get
			{
				return this._Distractor1;
			}
			set
			{
				if ((this._Distractor1 != value))
				{
					this.OnDistractor1Changing(value);
					this.SendPropertyChanging();
					this._Distractor1 = value;
					this.SendPropertyChanged("Distractor1");
					this.OnDistractor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsCorrecta", DbType="Bit")]
		public System.Nullable<bool> EsCorrecta
		{
			get
			{
				return this._EsCorrecta;
			}
			set
			{
				if ((this._EsCorrecta != value))
				{
					this.OnEsCorrectaChanging(value);
					this.SendPropertyChanging();
					this._EsCorrecta = value;
					this.SendPropertyChanged("EsCorrecta");
					this.OnEsCorrectaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsOptima", DbType="Bit")]
		public System.Nullable<bool> EsOptima
		{
			get
			{
				return this._EsOptima;
			}
			set
			{
				if ((this._EsOptima != value))
				{
					this.OnEsOptimaChanging(value);
					this.SendPropertyChanging();
					this._EsOptima = value;
					this.SendPropertyChanged("EsOptima");
					this.OnEsOptimaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distractor_Reactivo", Storage="_Reactivos", ThisKey="Id", OtherKey="IdDistractor")]
		public EntitySet<Reactivo> Reactivos
		{
			get
			{
				return this._Reactivos;
			}
			set
			{
				this._Reactivos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Distractor", Storage="_Pregunta", ThisKey="IdPregunta", OtherKey="Id", IsForeignKey=true)]
		public Pregunta Pregunta
		{
			get
			{
				return this._Pregunta.Entity;
			}
			set
			{
				Pregunta previousValue = this._Pregunta.Entity;
				if (((previousValue != value) 
							|| (this._Pregunta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pregunta.Entity = null;
						previousValue.Distractors.Remove(this);
					}
					this._Pregunta.Entity = value;
					if ((value != null))
					{
						value.Distractors.Add(this);
						this._IdPregunta = value.Id;
					}
					else
					{
						this._IdPregunta = default(int);
					}
					this.SendPropertyChanged("Pregunta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reactivos(Reactivo entity)
		{
			this.SendPropertyChanging();
			entity.Distractor = this;
		}
		
		private void detach_Reactivos(Reactivo entity)
		{
			this.SendPropertyChanging();
			entity.Distractor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Evaluacion")]
	public partial class Evaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPublicacion;
		
		private int _IdExperto;
		
		private int _Valor;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private EntityRef<Experto> _Experto;
		
		private EntityRef<Publicacion> _Publicacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPublicacionChanging(int value);
    partial void OnIdPublicacionChanged();
    partial void OnIdExpertoChanging(int value);
    partial void OnIdExpertoChanged();
    partial void OnValorChanging(int value);
    partial void OnValorChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    #endregion
		
		public Evaluacion()
		{
			this._Experto = default(EntityRef<Experto>);
			this._Publicacion = default(EntityRef<Publicacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPublicacion", DbType="Int NOT NULL")]
		public int IdPublicacion
		{
			get
			{
				return this._IdPublicacion;
			}
			set
			{
				if ((this._IdPublicacion != value))
				{
					if (this._Publicacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPublicacionChanging(value);
					this.SendPropertyChanging();
					this._IdPublicacion = value;
					this.SendPropertyChanged("IdPublicacion");
					this.OnIdPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExperto", DbType="Int NOT NULL")]
		public int IdExperto
		{
			get
			{
				return this._IdExperto;
			}
			set
			{
				if ((this._IdExperto != value))
				{
					if (this._Experto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdExpertoChanging(value);
					this.SendPropertyChanging();
					this._IdExperto = value;
					this.SendPropertyChanged("IdExperto");
					this.OnIdExpertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Int NOT NULL")]
		public int Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_Evaluacion", Storage="_Experto", ThisKey="IdExperto", OtherKey="Id", IsForeignKey=true)]
		public Experto Experto
		{
			get
			{
				return this._Experto.Entity;
			}
			set
			{
				Experto previousValue = this._Experto.Entity;
				if (((previousValue != value) 
							|| (this._Experto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Experto.Entity = null;
						previousValue.Evaluacions.Remove(this);
					}
					this._Experto.Entity = value;
					if ((value != null))
					{
						value.Evaluacions.Add(this);
						this._IdExperto = value.Id;
					}
					else
					{
						this._IdExperto = default(int);
					}
					this.SendPropertyChanged("Experto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicacion_Evaluacion", Storage="_Publicacion", ThisKey="IdPublicacion", OtherKey="Id", IsForeignKey=true)]
		public Publicacion Publicacion
		{
			get
			{
				return this._Publicacion.Entity;
			}
			set
			{
				Publicacion previousValue = this._Publicacion.Entity;
				if (((previousValue != value) 
							|| (this._Publicacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publicacion.Entity = null;
						previousValue.Evaluacions.Remove(this);
					}
					this._Publicacion.Entity = value;
					if ((value != null))
					{
						value.Evaluacions.Add(this);
						this._IdPublicacion = value.Id;
					}
					else
					{
						this._IdPublicacion = default(int);
					}
					this.SendPropertyChanged("Publicacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Experto")]
	public partial class Experto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuarioSistema;
		
		private int _IdStatusSistema;
		
		private string _Resumen;
		
		private EntitySet<BancoPregunta> _BancoPreguntas;
		
		private EntitySet<Evaluacion> _Evaluacions;
		
		private EntitySet<ExpertoArea> _ExpertoAreas;
		
		private EntitySet<ExpertoEscuela> _ExpertoEscuelas;
		
		private EntitySet<GrupoTrabajo> _GrupoTrabajos;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
		private EntityRef<UsuarioSistema> _UsuarioSistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioSistemaChanging(int value);
    partial void OnIdUsuarioSistemaChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    partial void OnResumenChanging(string value);
    partial void OnResumenChanged();
    #endregion
		
		public Experto()
		{
			this._BancoPreguntas = new EntitySet<BancoPregunta>(new Action<BancoPregunta>(this.attach_BancoPreguntas), new Action<BancoPregunta>(this.detach_BancoPreguntas));
			this._Evaluacions = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacions), new Action<Evaluacion>(this.detach_Evaluacions));
			this._ExpertoAreas = new EntitySet<ExpertoArea>(new Action<ExpertoArea>(this.attach_ExpertoAreas), new Action<ExpertoArea>(this.detach_ExpertoAreas));
			this._ExpertoEscuelas = new EntitySet<ExpertoEscuela>(new Action<ExpertoEscuela>(this.attach_ExpertoEscuelas), new Action<ExpertoEscuela>(this.detach_ExpertoEscuelas));
			this._GrupoTrabajos = new EntitySet<GrupoTrabajo>(new Action<GrupoTrabajo>(this.attach_GrupoTrabajos), new Action<GrupoTrabajo>(this.detach_GrupoTrabajos));
			this._StatusSistema = default(EntityRef<StatusSistema>);
			this._UsuarioSistema = default(EntityRef<UsuarioSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioSistema", DbType="Int NOT NULL")]
		public int IdUsuarioSistema
		{
			get
			{
				return this._IdUsuarioSistema;
			}
			set
			{
				if ((this._IdUsuarioSistema != value))
				{
					if (this._UsuarioSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioSistema = value;
					this.SendPropertyChanged("IdUsuarioSistema");
					this.OnIdUsuarioSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resumen", DbType="VarChar(250)")]
		public string Resumen
		{
			get
			{
				return this._Resumen;
			}
			set
			{
				if ((this._Resumen != value))
				{
					this.OnResumenChanging(value);
					this.SendPropertyChanging();
					this._Resumen = value;
					this.SendPropertyChanged("Resumen");
					this.OnResumenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_BancoPregunta", Storage="_BancoPreguntas", ThisKey="Id", OtherKey="IdExperto")]
		public EntitySet<BancoPregunta> BancoPreguntas
		{
			get
			{
				return this._BancoPreguntas;
			}
			set
			{
				this._BancoPreguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_Evaluacion", Storage="_Evaluacions", ThisKey="Id", OtherKey="IdExperto")]
		public EntitySet<Evaluacion> Evaluacions
		{
			get
			{
				return this._Evaluacions;
			}
			set
			{
				this._Evaluacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_ExpertoArea", Storage="_ExpertoAreas", ThisKey="Id", OtherKey="IdExperto")]
		public EntitySet<ExpertoArea> ExpertoAreas
		{
			get
			{
				return this._ExpertoAreas;
			}
			set
			{
				this._ExpertoAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_ExpertoEscuela", Storage="_ExpertoEscuelas", ThisKey="Id", OtherKey="IdExperto")]
		public EntitySet<ExpertoEscuela> ExpertoEscuelas
		{
			get
			{
				return this._ExpertoEscuelas;
			}
			set
			{
				this._ExpertoEscuelas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_GrupoTrabajo", Storage="_GrupoTrabajos", ThisKey="Id", OtherKey="IdExperto")]
		public EntitySet<GrupoTrabajo> GrupoTrabajos
		{
			get
			{
				return this._GrupoTrabajos;
			}
			set
			{
				this._GrupoTrabajos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Experto", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.Expertos.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.Expertos.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioSistema_Experto", Storage="_UsuarioSistema", ThisKey="IdUsuarioSistema", OtherKey="Id", IsForeignKey=true)]
		public UsuarioSistema UsuarioSistema
		{
			get
			{
				return this._UsuarioSistema.Entity;
			}
			set
			{
				UsuarioSistema previousValue = this._UsuarioSistema.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioSistema.Entity = null;
						previousValue.Expertos.Remove(this);
					}
					this._UsuarioSistema.Entity = value;
					if ((value != null))
					{
						value.Expertos.Add(this);
						this._IdUsuarioSistema = value.Id;
					}
					else
					{
						this._IdUsuarioSistema = default(int);
					}
					this.SendPropertyChanged("UsuarioSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BancoPreguntas(BancoPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Experto = this;
		}
		
		private void detach_BancoPreguntas(BancoPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Experto = null;
		}
		
		private void attach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Experto = this;
		}
		
		private void detach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Experto = null;
		}
		
		private void attach_ExpertoAreas(ExpertoArea entity)
		{
			this.SendPropertyChanging();
			entity.Experto = this;
		}
		
		private void detach_ExpertoAreas(ExpertoArea entity)
		{
			this.SendPropertyChanging();
			entity.Experto = null;
		}
		
		private void attach_ExpertoEscuelas(ExpertoEscuela entity)
		{
			this.SendPropertyChanging();
			entity.Experto = this;
		}
		
		private void detach_ExpertoEscuelas(ExpertoEscuela entity)
		{
			this.SendPropertyChanging();
			entity.Experto = null;
		}
		
		private void attach_GrupoTrabajos(GrupoTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Experto = this;
		}
		
		private void detach_GrupoTrabajos(GrupoTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Experto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.ExpertoArea")]
	public partial class ExpertoArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdExperto;
		
		private int _IdArea;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<Experto> _Experto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdExpertoChanging(int value);
    partial void OnIdExpertoChanged();
    partial void OnIdAreaChanging(int value);
    partial void OnIdAreaChanged();
    #endregion
		
		public ExpertoArea()
		{
			this._Area = default(EntityRef<Area>);
			this._Experto = default(EntityRef<Experto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExperto", DbType="Int NOT NULL")]
		public int IdExperto
		{
			get
			{
				return this._IdExperto;
			}
			set
			{
				if ((this._IdExperto != value))
				{
					if (this._Experto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdExpertoChanging(value);
					this.SendPropertyChanging();
					this._IdExperto = value;
					this.SendPropertyChanged("IdExperto");
					this.OnIdExpertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArea", DbType="Int NOT NULL")]
		public int IdArea
		{
			get
			{
				return this._IdArea;
			}
			set
			{
				if ((this._IdArea != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAreaChanging(value);
					this.SendPropertyChanging();
					this._IdArea = value;
					this.SendPropertyChanged("IdArea");
					this.OnIdAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_ExpertoArea", Storage="_Area", ThisKey="IdArea", OtherKey="Id", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.ExpertoAreas.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.ExpertoAreas.Add(this);
						this._IdArea = value.Id;
					}
					else
					{
						this._IdArea = default(int);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_ExpertoArea", Storage="_Experto", ThisKey="IdExperto", OtherKey="Id", IsForeignKey=true)]
		public Experto Experto
		{
			get
			{
				return this._Experto.Entity;
			}
			set
			{
				Experto previousValue = this._Experto.Entity;
				if (((previousValue != value) 
							|| (this._Experto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Experto.Entity = null;
						previousValue.ExpertoAreas.Remove(this);
					}
					this._Experto.Entity = value;
					if ((value != null))
					{
						value.ExpertoAreas.Add(this);
						this._IdExperto = value.Id;
					}
					else
					{
						this._IdExperto = default(int);
					}
					this.SendPropertyChanged("Experto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.ExpertoEscuela")]
	public partial class ExpertoEscuela : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdExperto;
		
		private int _IdInstitucion;
		
		private EntityRef<Experto> _Experto;
		
		private EntityRef<Institucion> _Institucion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdExpertoChanging(int value);
    partial void OnIdExpertoChanged();
    partial void OnIdInstitucionChanging(int value);
    partial void OnIdInstitucionChanged();
    #endregion
		
		public ExpertoEscuela()
		{
			this._Experto = default(EntityRef<Experto>);
			this._Institucion = default(EntityRef<Institucion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExperto", DbType="Int NOT NULL")]
		public int IdExperto
		{
			get
			{
				return this._IdExperto;
			}
			set
			{
				if ((this._IdExperto != value))
				{
					if (this._Experto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdExpertoChanging(value);
					this.SendPropertyChanging();
					this._IdExperto = value;
					this.SendPropertyChanged("IdExperto");
					this.OnIdExpertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInstitucion", DbType="Int NOT NULL")]
		public int IdInstitucion
		{
			get
			{
				return this._IdInstitucion;
			}
			set
			{
				if ((this._IdInstitucion != value))
				{
					if (this._Institucion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInstitucionChanging(value);
					this.SendPropertyChanging();
					this._IdInstitucion = value;
					this.SendPropertyChanged("IdInstitucion");
					this.OnIdInstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_ExpertoEscuela", Storage="_Experto", ThisKey="IdExperto", OtherKey="Id", IsForeignKey=true)]
		public Experto Experto
		{
			get
			{
				return this._Experto.Entity;
			}
			set
			{
				Experto previousValue = this._Experto.Entity;
				if (((previousValue != value) 
							|| (this._Experto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Experto.Entity = null;
						previousValue.ExpertoEscuelas.Remove(this);
					}
					this._Experto.Entity = value;
					if ((value != null))
					{
						value.ExpertoEscuelas.Add(this);
						this._IdExperto = value.Id;
					}
					else
					{
						this._IdExperto = default(int);
					}
					this.SendPropertyChanged("Experto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_ExpertoEscuela", Storage="_Institucion", ThisKey="IdInstitucion", OtherKey="Id", IsForeignKey=true)]
		public Institucion Institucion
		{
			get
			{
				return this._Institucion.Entity;
			}
			set
			{
				Institucion previousValue = this._Institucion.Entity;
				if (((previousValue != value) 
							|| (this._Institucion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institucion.Entity = null;
						previousValue.ExpertoEscuelas.Remove(this);
					}
					this._Institucion.Entity = value;
					if ((value != null))
					{
						value.ExpertoEscuelas.Add(this);
						this._IdInstitucion = value.Id;
					}
					else
					{
						this._IdInstitucion = default(int);
					}
					this.SendPropertyChanged("Institucion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.GrupoTrabajo")]
	public partial class GrupoTrabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private int _IdExperto;
		
		private int _IdArea;
		
		private EntitySet<IntegranteGrupo> _IntegranteGrupos;
		
		private EntityRef<Experto> _Experto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIdExpertoChanging(int value);
    partial void OnIdExpertoChanged();
    partial void OnIdAreaChanging(int value);
    partial void OnIdAreaChanged();
    #endregion
		
		public GrupoTrabajo()
		{
			this._IntegranteGrupos = new EntitySet<IntegranteGrupo>(new Action<IntegranteGrupo>(this.attach_IntegranteGrupos), new Action<IntegranteGrupo>(this.detach_IntegranteGrupos));
			this._Experto = default(EntityRef<Experto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExperto", DbType="Int NOT NULL")]
		public int IdExperto
		{
			get
			{
				return this._IdExperto;
			}
			set
			{
				if ((this._IdExperto != value))
				{
					if (this._Experto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdExpertoChanging(value);
					this.SendPropertyChanging();
					this._IdExperto = value;
					this.SendPropertyChanged("IdExperto");
					this.OnIdExpertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArea", DbType="Int NOT NULL")]
		public int IdArea
		{
			get
			{
				return this._IdArea;
			}
			set
			{
				if ((this._IdArea != value))
				{
					this.OnIdAreaChanging(value);
					this.SendPropertyChanging();
					this._IdArea = value;
					this.SendPropertyChanged("IdArea");
					this.OnIdAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupoTrabajo_IntegranteGrupo", Storage="_IntegranteGrupos", ThisKey="Id", OtherKey="IdGrupoTrabajo")]
		public EntitySet<IntegranteGrupo> IntegranteGrupos
		{
			get
			{
				return this._IntegranteGrupos;
			}
			set
			{
				this._IntegranteGrupos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Experto_GrupoTrabajo", Storage="_Experto", ThisKey="IdExperto", OtherKey="Id", IsForeignKey=true)]
		public Experto Experto
		{
			get
			{
				return this._Experto.Entity;
			}
			set
			{
				Experto previousValue = this._Experto.Entity;
				if (((previousValue != value) 
							|| (this._Experto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Experto.Entity = null;
						previousValue.GrupoTrabajos.Remove(this);
					}
					this._Experto.Entity = value;
					if ((value != null))
					{
						value.GrupoTrabajos.Add(this);
						this._IdExperto = value.Id;
					}
					else
					{
						this._IdExperto = default(int);
					}
					this.SendPropertyChanged("Experto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IntegranteGrupos(IntegranteGrupo entity)
		{
			this.SendPropertyChanging();
			entity.GrupoTrabajo = this;
		}
		
		private void detach_IntegranteGrupos(IntegranteGrupo entity)
		{
			this.SendPropertyChanging();
			entity.GrupoTrabajo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.IntegranteGrupo")]
	public partial class IntegranteGrupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdGrupoTrabajo;
		
		private int _IdAlumno;
		
		private int _IdStatusSistema;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<GrupoTrabajo> _GrupoTrabajo;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdGrupoTrabajoChanging(int value);
    partial void OnIdGrupoTrabajoChanged();
    partial void OnIdAlumnoChanging(int value);
    partial void OnIdAlumnoChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    #endregion
		
		public IntegranteGrupo()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._GrupoTrabajo = default(EntityRef<GrupoTrabajo>);
			this._StatusSistema = default(EntityRef<StatusSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGrupoTrabajo", DbType="Int NOT NULL")]
		public int IdGrupoTrabajo
		{
			get
			{
				return this._IdGrupoTrabajo;
			}
			set
			{
				if ((this._IdGrupoTrabajo != value))
				{
					if (this._GrupoTrabajo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGrupoTrabajoChanging(value);
					this.SendPropertyChanging();
					this._IdGrupoTrabajo = value;
					this.SendPropertyChanged("IdGrupoTrabajo");
					this.OnIdGrupoTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAlumno", DbType="Int NOT NULL")]
		public int IdAlumno
		{
			get
			{
				return this._IdAlumno;
			}
			set
			{
				if ((this._IdAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAlumnoChanging(value);
					this.SendPropertyChanging();
					this._IdAlumno = value;
					this.SendPropertyChanged("IdAlumno");
					this.OnIdAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_IntegranteGrupo", Storage="_Alumno", ThisKey="IdAlumno", OtherKey="Id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.IntegranteGrupos.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.IntegranteGrupos.Add(this);
						this._IdAlumno = value.Id;
					}
					else
					{
						this._IdAlumno = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupoTrabajo_IntegranteGrupo", Storage="_GrupoTrabajo", ThisKey="IdGrupoTrabajo", OtherKey="Id", IsForeignKey=true)]
		public GrupoTrabajo GrupoTrabajo
		{
			get
			{
				return this._GrupoTrabajo.Entity;
			}
			set
			{
				GrupoTrabajo previousValue = this._GrupoTrabajo.Entity;
				if (((previousValue != value) 
							|| (this._GrupoTrabajo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GrupoTrabajo.Entity = null;
						previousValue.IntegranteGrupos.Remove(this);
					}
					this._GrupoTrabajo.Entity = value;
					if ((value != null))
					{
						value.IntegranteGrupos.Add(this);
						this._IdGrupoTrabajo = value.Id;
					}
					else
					{
						this._IdGrupoTrabajo = default(int);
					}
					this.SendPropertyChanged("GrupoTrabajo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_IntegranteGrupo", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.IntegranteGrupos.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.IntegranteGrupos.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Pregunta")]
	public partial class Pregunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdBancoPreguntas;
		
		private string _Pregunta1;
		
		private int _IdStatusSistema;
		
		private EntitySet<Distractor> _Distractors;
		
		private EntitySet<Reactivo> _Reactivos;
		
		private EntityRef<BancoPregunta> _BancoPregunta;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdBancoPreguntasChanging(int value);
    partial void OnIdBancoPreguntasChanged();
    partial void OnPregunta1Changing(string value);
    partial void OnPregunta1Changed();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    #endregion
		
		public Pregunta()
		{
			this._Distractors = new EntitySet<Distractor>(new Action<Distractor>(this.attach_Distractors), new Action<Distractor>(this.detach_Distractors));
			this._Reactivos = new EntitySet<Reactivo>(new Action<Reactivo>(this.attach_Reactivos), new Action<Reactivo>(this.detach_Reactivos));
			this._BancoPregunta = default(EntityRef<BancoPregunta>);
			this._StatusSistema = default(EntityRef<StatusSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBancoPreguntas", DbType="Int NOT NULL")]
		public int IdBancoPreguntas
		{
			get
			{
				return this._IdBancoPreguntas;
			}
			set
			{
				if ((this._IdBancoPreguntas != value))
				{
					if (this._BancoPregunta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBancoPreguntasChanging(value);
					this.SendPropertyChanging();
					this._IdBancoPreguntas = value;
					this.SendPropertyChanged("IdBancoPreguntas");
					this.OnIdBancoPreguntasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pregunta", Storage="_Pregunta1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Pregunta1
		{
			get
			{
				return this._Pregunta1;
			}
			set
			{
				if ((this._Pregunta1 != value))
				{
					this.OnPregunta1Changing(value);
					this.SendPropertyChanging();
					this._Pregunta1 = value;
					this.SendPropertyChanged("Pregunta1");
					this.OnPregunta1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Distractor", Storage="_Distractors", ThisKey="Id", OtherKey="IdPregunta")]
		public EntitySet<Distractor> Distractors
		{
			get
			{
				return this._Distractors;
			}
			set
			{
				this._Distractors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Reactivo", Storage="_Reactivos", ThisKey="Id", OtherKey="IdPregunta")]
		public EntitySet<Reactivo> Reactivos
		{
			get
			{
				return this._Reactivos;
			}
			set
			{
				this._Reactivos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BancoPregunta_Pregunta", Storage="_BancoPregunta", ThisKey="IdBancoPreguntas", OtherKey="Id", IsForeignKey=true)]
		public BancoPregunta BancoPregunta
		{
			get
			{
				return this._BancoPregunta.Entity;
			}
			set
			{
				BancoPregunta previousValue = this._BancoPregunta.Entity;
				if (((previousValue != value) 
							|| (this._BancoPregunta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BancoPregunta.Entity = null;
						previousValue.Preguntas.Remove(this);
					}
					this._BancoPregunta.Entity = value;
					if ((value != null))
					{
						value.Preguntas.Add(this);
						this._IdBancoPreguntas = value.Id;
					}
					else
					{
						this._IdBancoPreguntas = default(int);
					}
					this.SendPropertyChanged("BancoPregunta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Pregunta", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.Preguntas.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.Preguntas.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Distractors(Distractor entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = this;
		}
		
		private void detach_Distractors(Distractor entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = null;
		}
		
		private void attach_Reactivos(Reactivo entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = this;
		}
		
		private void detach_Reactivos(Reactivo entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Publicacion")]
	public partial class Publicacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdAutor;
		
		private string _Titulo;
		
		private string _Contenido;
		
		private int _IdStatusSistema;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private EntitySet<Valoracion> _Valoracions;
		
		private EntitySet<Evaluacion> _Evaluacions;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdAutorChanging(int value);
    partial void OnIdAutorChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnContenidoChanging(string value);
    partial void OnContenidoChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    #endregion
		
		public Publicacion()
		{
			this._Valoracions = new EntitySet<Valoracion>(new Action<Valoracion>(this.attach_Valoracions), new Action<Valoracion>(this.detach_Valoracions));
			this._Evaluacions = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacions), new Action<Evaluacion>(this.detach_Evaluacions));
			this._Alumno = default(EntityRef<Alumno>);
			this._StatusSistema = default(EntityRef<StatusSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAutor", DbType="Int NOT NULL")]
		public int IdAutor
		{
			get
			{
				return this._IdAutor;
			}
			set
			{
				if ((this._IdAutor != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAutorChanging(value);
					this.SendPropertyChanging();
					this._IdAutor = value;
					this.SendPropertyChanged("IdAutor");
					this.OnIdAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contenido", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Contenido
		{
			get
			{
				return this._Contenido;
			}
			set
			{
				if ((this._Contenido != value))
				{
					this.OnContenidoChanging(value);
					this.SendPropertyChanging();
					this._Contenido = value;
					this.SendPropertyChanged("Contenido");
					this.OnContenidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicacion_Valoracion", Storage="_Valoracions", ThisKey="Id", OtherKey="IdPublicacion")]
		public EntitySet<Valoracion> Valoracions
		{
			get
			{
				return this._Valoracions;
			}
			set
			{
				this._Valoracions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicacion_Evaluacion", Storage="_Evaluacions", ThisKey="Id", OtherKey="IdPublicacion")]
		public EntitySet<Evaluacion> Evaluacions
		{
			get
			{
				return this._Evaluacions;
			}
			set
			{
				this._Evaluacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Publicacion", Storage="_Alumno", ThisKey="IdAutor", OtherKey="Id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Publicacions.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Publicacions.Add(this);
						this._IdAutor = value.Id;
					}
					else
					{
						this._IdAutor = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Publicacion", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.Publicacions.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.Publicacions.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valoracions(Valoracion entity)
		{
			this.SendPropertyChanging();
			entity.Publicacion = this;
		}
		
		private void detach_Valoracions(Valoracion entity)
		{
			this.SendPropertyChanging();
			entity.Publicacion = null;
		}
		
		private void attach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Publicacion = this;
		}
		
		private void detach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Publicacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Reactivo")]
	public partial class Reactivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdCuestionario;
		
		private int _IdPregunta;
		
		private int _IdDistractor;
		
		private string _Respuesta;
		
		private EntityRef<Cuestionario> _Cuestionario;
		
		private EntityRef<Distractor> _Distractor;
		
		private EntityRef<Pregunta> _Pregunta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdCuestionarioChanging(int value);
    partial void OnIdCuestionarioChanged();
    partial void OnIdPreguntaChanging(int value);
    partial void OnIdPreguntaChanged();
    partial void OnIdDistractorChanging(int value);
    partial void OnIdDistractorChanged();
    partial void OnRespuestaChanging(string value);
    partial void OnRespuestaChanged();
    #endregion
		
		public Reactivo()
		{
			this._Cuestionario = default(EntityRef<Cuestionario>);
			this._Distractor = default(EntityRef<Distractor>);
			this._Pregunta = default(EntityRef<Pregunta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCuestionario", DbType="Int NOT NULL")]
		public int IdCuestionario
		{
			get
			{
				return this._IdCuestionario;
			}
			set
			{
				if ((this._IdCuestionario != value))
				{
					if (this._Cuestionario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCuestionarioChanging(value);
					this.SendPropertyChanging();
					this._IdCuestionario = value;
					this.SendPropertyChanged("IdCuestionario");
					this.OnIdCuestionarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="Int NOT NULL")]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					if (this._Pregunta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDistractor", DbType="Int NOT NULL")]
		public int IdDistractor
		{
			get
			{
				return this._IdDistractor;
			}
			set
			{
				if ((this._IdDistractor != value))
				{
					if (this._Distractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDistractorChanging(value);
					this.SendPropertyChanging();
					this._IdDistractor = value;
					this.SendPropertyChanged("IdDistractor");
					this.OnIdDistractorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respuesta", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Respuesta
		{
			get
			{
				return this._Respuesta;
			}
			set
			{
				if ((this._Respuesta != value))
				{
					this.OnRespuestaChanging(value);
					this.SendPropertyChanging();
					this._Respuesta = value;
					this.SendPropertyChanged("Respuesta");
					this.OnRespuestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cuestionario_Reactivo", Storage="_Cuestionario", ThisKey="IdCuestionario", OtherKey="Id", IsForeignKey=true)]
		public Cuestionario Cuestionario
		{
			get
			{
				return this._Cuestionario.Entity;
			}
			set
			{
				Cuestionario previousValue = this._Cuestionario.Entity;
				if (((previousValue != value) 
							|| (this._Cuestionario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cuestionario.Entity = null;
						previousValue.Reactivos.Remove(this);
					}
					this._Cuestionario.Entity = value;
					if ((value != null))
					{
						value.Reactivos.Add(this);
						this._IdCuestionario = value.Id;
					}
					else
					{
						this._IdCuestionario = default(int);
					}
					this.SendPropertyChanged("Cuestionario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distractor_Reactivo", Storage="_Distractor", ThisKey="IdDistractor", OtherKey="Id", IsForeignKey=true)]
		public Distractor Distractor
		{
			get
			{
				return this._Distractor.Entity;
			}
			set
			{
				Distractor previousValue = this._Distractor.Entity;
				if (((previousValue != value) 
							|| (this._Distractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Distractor.Entity = null;
						previousValue.Reactivos.Remove(this);
					}
					this._Distractor.Entity = value;
					if ((value != null))
					{
						value.Reactivos.Add(this);
						this._IdDistractor = value.Id;
					}
					else
					{
						this._IdDistractor = default(int);
					}
					this.SendPropertyChanged("Distractor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Reactivo", Storage="_Pregunta", ThisKey="IdPregunta", OtherKey="Id", IsForeignKey=true)]
		public Pregunta Pregunta
		{
			get
			{
				return this._Pregunta.Entity;
			}
			set
			{
				Pregunta previousValue = this._Pregunta.Entity;
				if (((previousValue != value) 
							|| (this._Pregunta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pregunta.Entity = null;
						previousValue.Reactivos.Remove(this);
					}
					this._Pregunta.Entity = value;
					if ((value != null))
					{
						value.Reactivos.Add(this);
						this._IdPregunta = value.Id;
					}
					else
					{
						this._IdPregunta = default(int);
					}
					this.SendPropertyChanged("Pregunta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cotediv.Tipos")]
	public partial class Tipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<Cuestionario> _Cuestionarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Tipo()
		{
			this._Cuestionarios = new EntitySet<Cuestionario>(new Action<Cuestionario>(this.attach_Cuestionarios), new Action<Cuestionario>(this.detach_Cuestionarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Cuestionario", Storage="_Cuestionarios", ThisKey="Id", OtherKey="IdTipo")]
		public EntitySet<Cuestionario> Cuestionarios
		{
			get
			{
				return this._Cuestionarios;
			}
			set
			{
				this._Cuestionarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cuestionarios(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Tipo = this;
		}
		
		private void detach_Cuestionarios(Cuestionario entity)
		{
			this.SendPropertyChanging();
			entity.Tipo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.Contacto")]
	public partial class Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdNegocio;
		
		private string _Nombre;
		
		private string _Telefono;
		
		private string _Correo;
		
		private string _Comentario;
		
		private System.DateTime _Fecha;
		
		private EntityRef<Negocio> _Negocio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNegocioChanging(int value);
    partial void OnIdNegocioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnComentarioChanging(string value);
    partial void OnComentarioChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Contacto()
		{
			this._Negocio = default(EntityRef<Negocio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNegocio", DbType="Int NOT NULL")]
		public int IdNegocio
		{
			get
			{
				return this._IdNegocio;
			}
			set
			{
				if ((this._IdNegocio != value))
				{
					if (this._Negocio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNegocioChanging(value);
					this.SendPropertyChanging();
					this._IdNegocio = value;
					this.SendPropertyChanged("IdNegocio");
					this.OnIdNegocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentario", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				if ((this._Comentario != value))
				{
					this.OnComentarioChanging(value);
					this.SendPropertyChanging();
					this._Comentario = value;
					this.SendPropertyChanged("Comentario");
					this.OnComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Negocio_Contacto", Storage="_Negocio", ThisKey="IdNegocio", OtherKey="Id", IsForeignKey=true)]
		public Negocio Negocio
		{
			get
			{
				return this._Negocio.Entity;
			}
			set
			{
				Negocio previousValue = this._Negocio.Entity;
				if (((previousValue != value) 
							|| (this._Negocio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Negocio.Entity = null;
						previousValue.Contactos.Remove(this);
					}
					this._Negocio.Entity = value;
					if ((value != null))
					{
						value.Contactos.Add(this);
						this._IdNegocio = value.Id;
					}
					else
					{
						this._IdNegocio = default(int);
					}
					this.SendPropertyChanged("Negocio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.ElementoDireccion")]
	public partial class ElementoDireccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdDireccion;
		
		private int _IdTipoElemento;
		
		private string _Valor;
		
		private EntityRef<TipoElemento> _TipoElemento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdDireccionChanging(int value);
    partial void OnIdDireccionChanged();
    partial void OnIdTipoElementoChanging(int value);
    partial void OnIdTipoElementoChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    #endregion
		
		public ElementoDireccion()
		{
			this._TipoElemento = default(EntityRef<TipoElemento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDireccion", DbType="Int NOT NULL")]
		public int IdDireccion
		{
			get
			{
				return this._IdDireccion;
			}
			set
			{
				if ((this._IdDireccion != value))
				{
					this.OnIdDireccionChanging(value);
					this.SendPropertyChanging();
					this._IdDireccion = value;
					this.SendPropertyChanged("IdDireccion");
					this.OnIdDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoElemento", DbType="Int NOT NULL")]
		public int IdTipoElemento
		{
			get
			{
				return this._IdTipoElemento;
			}
			set
			{
				if ((this._IdTipoElemento != value))
				{
					if (this._TipoElemento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoElementoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoElemento = value;
					this.SendPropertyChanged("IdTipoElemento");
					this.OnIdTipoElementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoElemento_ElementoDireccion", Storage="_TipoElemento", ThisKey="IdTipoElemento", OtherKey="Id", IsForeignKey=true)]
		public TipoElemento TipoElemento
		{
			get
			{
				return this._TipoElemento.Entity;
			}
			set
			{
				TipoElemento previousValue = this._TipoElemento.Entity;
				if (((previousValue != value) 
							|| (this._TipoElemento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoElemento.Entity = null;
						previousValue.ElementoDireccions.Remove(this);
					}
					this._TipoElemento.Entity = value;
					if ((value != null))
					{
						value.ElementoDireccions.Add(this);
						this._IdTipoElemento = value.Id;
					}
					else
					{
						this._IdTipoElemento = default(int);
					}
					this.SendPropertyChanged("TipoElemento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.Etiqueta")]
	public partial class Etiqueta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<NegocioEtiqueta> _NegocioEtiquetas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Etiqueta()
		{
			this._NegocioEtiquetas = new EntitySet<NegocioEtiqueta>(new Action<NegocioEtiqueta>(this.attach_NegocioEtiquetas), new Action<NegocioEtiqueta>(this.detach_NegocioEtiquetas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Etiqueta_NegocioEtiqueta", Storage="_NegocioEtiquetas", ThisKey="Id", OtherKey="IdEtiqueta")]
		public EntitySet<NegocioEtiqueta> NegocioEtiquetas
		{
			get
			{
				return this._NegocioEtiquetas;
			}
			set
			{
				this._NegocioEtiquetas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegocioEtiquetas(NegocioEtiqueta entity)
		{
			this.SendPropertyChanging();
			entity.Etiqueta = this;
		}
		
		private void detach_NegocioEtiquetas(NegocioEtiqueta entity)
		{
			this.SendPropertyChanging();
			entity.Etiqueta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.Negocio")]
	public partial class Negocio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Correo;
		
		private int _IdPropietario;
		
		private int _IdStatusSistema;
		
		private string _Logo;
		
		private EntitySet<Contacto> _Contactos;
		
		private EntitySet<NegocioEtiqueta> _NegocioEtiquetas;
		
		private EntitySet<Oferta> _Ofertas;
		
		private EntityRef<UsuarioSistema> _UsuarioSistema;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnIdPropietarioChanging(int value);
    partial void OnIdPropietarioChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    #endregion
		
		public Negocio()
		{
			this._Contactos = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contactos), new Action<Contacto>(this.detach_Contactos));
			this._NegocioEtiquetas = new EntitySet<NegocioEtiqueta>(new Action<NegocioEtiqueta>(this.attach_NegocioEtiquetas), new Action<NegocioEtiqueta>(this.detach_NegocioEtiquetas));
			this._Ofertas = new EntitySet<Oferta>(new Action<Oferta>(this.attach_Ofertas), new Action<Oferta>(this.detach_Ofertas));
			this._UsuarioSistema = default(EntityRef<UsuarioSistema>);
			this._StatusSistema = default(EntityRef<StatusSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPropietario", DbType="Int NOT NULL")]
		public int IdPropietario
		{
			get
			{
				return this._IdPropietario;
			}
			set
			{
				if ((this._IdPropietario != value))
				{
					if (this._UsuarioSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPropietarioChanging(value);
					this.SendPropertyChanging();
					this._IdPropietario = value;
					this.SendPropertyChanged("IdPropietario");
					this.OnIdPropietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Negocio_Contacto", Storage="_Contactos", ThisKey="Id", OtherKey="IdNegocio")]
		public EntitySet<Contacto> Contactos
		{
			get
			{
				return this._Contactos;
			}
			set
			{
				this._Contactos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Negocio_NegocioEtiqueta", Storage="_NegocioEtiquetas", ThisKey="Id", OtherKey="IdNegocio")]
		public EntitySet<NegocioEtiqueta> NegocioEtiquetas
		{
			get
			{
				return this._NegocioEtiquetas;
			}
			set
			{
				this._NegocioEtiquetas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Negocio_Oferta", Storage="_Ofertas", ThisKey="Id", OtherKey="IdNegocio")]
		public EntitySet<Oferta> Ofertas
		{
			get
			{
				return this._Ofertas;
			}
			set
			{
				this._Ofertas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioSistema_Negocio", Storage="_UsuarioSistema", ThisKey="IdPropietario", OtherKey="Id", IsForeignKey=true)]
		public UsuarioSistema UsuarioSistema
		{
			get
			{
				return this._UsuarioSistema.Entity;
			}
			set
			{
				UsuarioSistema previousValue = this._UsuarioSistema.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioSistema.Entity = null;
						previousValue.Negocios.Remove(this);
					}
					this._UsuarioSistema.Entity = value;
					if ((value != null))
					{
						value.Negocios.Add(this);
						this._IdPropietario = value.Id;
					}
					else
					{
						this._IdPropietario = default(int);
					}
					this.SendPropertyChanged("UsuarioSistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Negocio", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.Negocios.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.Negocios.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Negocio = this;
		}
		
		private void detach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Negocio = null;
		}
		
		private void attach_NegocioEtiquetas(NegocioEtiqueta entity)
		{
			this.SendPropertyChanging();
			entity.Negocio = this;
		}
		
		private void detach_NegocioEtiquetas(NegocioEtiqueta entity)
		{
			this.SendPropertyChanging();
			entity.Negocio = null;
		}
		
		private void attach_Ofertas(Oferta entity)
		{
			this.SendPropertyChanging();
			entity.Negocio = this;
		}
		
		private void detach_Ofertas(Oferta entity)
		{
			this.SendPropertyChanging();
			entity.Negocio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.NegocioEtiqueta")]
	public partial class NegocioEtiqueta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdNegocio;
		
		private int _IdEtiqueta;
		
		private EntityRef<Etiqueta> _Etiqueta;
		
		private EntityRef<Negocio> _Negocio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNegocioChanging(int value);
    partial void OnIdNegocioChanged();
    partial void OnIdEtiquetaChanging(int value);
    partial void OnIdEtiquetaChanged();
    #endregion
		
		public NegocioEtiqueta()
		{
			this._Etiqueta = default(EntityRef<Etiqueta>);
			this._Negocio = default(EntityRef<Negocio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNegocio", DbType="Int NOT NULL")]
		public int IdNegocio
		{
			get
			{
				return this._IdNegocio;
			}
			set
			{
				if ((this._IdNegocio != value))
				{
					if (this._Negocio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNegocioChanging(value);
					this.SendPropertyChanging();
					this._IdNegocio = value;
					this.SendPropertyChanged("IdNegocio");
					this.OnIdNegocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEtiqueta", DbType="Int NOT NULL")]
		public int IdEtiqueta
		{
			get
			{
				return this._IdEtiqueta;
			}
			set
			{
				if ((this._IdEtiqueta != value))
				{
					if (this._Etiqueta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEtiquetaChanging(value);
					this.SendPropertyChanging();
					this._IdEtiqueta = value;
					this.SendPropertyChanged("IdEtiqueta");
					this.OnIdEtiquetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Etiqueta_NegocioEtiqueta", Storage="_Etiqueta", ThisKey="IdEtiqueta", OtherKey="Id", IsForeignKey=true)]
		public Etiqueta Etiqueta
		{
			get
			{
				return this._Etiqueta.Entity;
			}
			set
			{
				Etiqueta previousValue = this._Etiqueta.Entity;
				if (((previousValue != value) 
							|| (this._Etiqueta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Etiqueta.Entity = null;
						previousValue.NegocioEtiquetas.Remove(this);
					}
					this._Etiqueta.Entity = value;
					if ((value != null))
					{
						value.NegocioEtiquetas.Add(this);
						this._IdEtiqueta = value.Id;
					}
					else
					{
						this._IdEtiqueta = default(int);
					}
					this.SendPropertyChanged("Etiqueta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Negocio_NegocioEtiqueta", Storage="_Negocio", ThisKey="IdNegocio", OtherKey="Id", IsForeignKey=true)]
		public Negocio Negocio
		{
			get
			{
				return this._Negocio.Entity;
			}
			set
			{
				Negocio previousValue = this._Negocio.Entity;
				if (((previousValue != value) 
							|| (this._Negocio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Negocio.Entity = null;
						previousValue.NegocioEtiquetas.Remove(this);
					}
					this._Negocio.Entity = value;
					if ((value != null))
					{
						value.NegocioEtiquetas.Add(this);
						this._IdNegocio = value.Id;
					}
					else
					{
						this._IdNegocio = default(int);
					}
					this.SendPropertyChanged("Negocio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.Oferta")]
	public partial class Oferta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdTipoOferta;
		
		private string _Nombre;
		
		private string _Breve;
		
		private string _Descripcion;
		
		private decimal _Precio;
		
		private int _IdNegocio;
		
		private int _IdStatusSistema;
		
		private EntityRef<Negocio> _Negocio;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
		private EntityRef<TipoOferta> _TipoOferta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdTipoOfertaChanging(int value);
    partial void OnIdTipoOfertaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnBreveChanging(string value);
    partial void OnBreveChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnIdNegocioChanging(int value);
    partial void OnIdNegocioChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    #endregion
		
		public Oferta()
		{
			this._Negocio = default(EntityRef<Negocio>);
			this._StatusSistema = default(EntityRef<StatusSistema>);
			this._TipoOferta = default(EntityRef<TipoOferta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoOferta", DbType="Int NOT NULL")]
		public int IdTipoOferta
		{
			get
			{
				return this._IdTipoOferta;
			}
			set
			{
				if ((this._IdTipoOferta != value))
				{
					if (this._TipoOferta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoOfertaChanging(value);
					this.SendPropertyChanging();
					this._IdTipoOferta = value;
					this.SendPropertyChanged("IdTipoOferta");
					this.OnIdTipoOfertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breve", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Breve
		{
			get
			{
				return this._Breve;
			}
			set
			{
				if ((this._Breve != value))
				{
					this.OnBreveChanging(value);
					this.SendPropertyChanging();
					this._Breve = value;
					this.SendPropertyChanged("Breve");
					this.OnBreveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(10,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNegocio", DbType="Int NOT NULL")]
		public int IdNegocio
		{
			get
			{
				return this._IdNegocio;
			}
			set
			{
				if ((this._IdNegocio != value))
				{
					if (this._Negocio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNegocioChanging(value);
					this.SendPropertyChanging();
					this._IdNegocio = value;
					this.SendPropertyChanged("IdNegocio");
					this.OnIdNegocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Negocio_Oferta", Storage="_Negocio", ThisKey="IdNegocio", OtherKey="Id", IsForeignKey=true)]
		public Negocio Negocio
		{
			get
			{
				return this._Negocio.Entity;
			}
			set
			{
				Negocio previousValue = this._Negocio.Entity;
				if (((previousValue != value) 
							|| (this._Negocio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Negocio.Entity = null;
						previousValue.Ofertas.Remove(this);
					}
					this._Negocio.Entity = value;
					if ((value != null))
					{
						value.Ofertas.Add(this);
						this._IdNegocio = value.Id;
					}
					else
					{
						this._IdNegocio = default(int);
					}
					this.SendPropertyChanged("Negocio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Oferta", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.Ofertas.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.Ofertas.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoOferta_Oferta", Storage="_TipoOferta", ThisKey="IdTipoOferta", OtherKey="Id", IsForeignKey=true)]
		public TipoOferta TipoOferta
		{
			get
			{
				return this._TipoOferta.Entity;
			}
			set
			{
				TipoOferta previousValue = this._TipoOferta.Entity;
				if (((previousValue != value) 
							|| (this._TipoOferta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoOferta.Entity = null;
						previousValue.Ofertas.Remove(this);
					}
					this._TipoOferta.Entity = value;
					if ((value != null))
					{
						value.Ofertas.Add(this);
						this._IdTipoOferta = value.Id;
					}
					else
					{
						this._IdTipoOferta = default(int);
					}
					this.SendPropertyChanged("TipoOferta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.Telefono")]
	public partial class Telefono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdDireccion;
		
		private string _Valor;
		
		private int _IdStatusSistema;
		
		private EntityRef<StatusSistema> _StatusSistema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdDireccionChanging(int value);
    partial void OnIdDireccionChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    partial void OnIdStatusSistemaChanging(int value);
    partial void OnIdStatusSistemaChanged();
    #endregion
		
		public Telefono()
		{
			this._StatusSistema = default(EntityRef<StatusSistema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDireccion", DbType="Int NOT NULL")]
		public int IdDireccion
		{
			get
			{
				return this._IdDireccion;
			}
			set
			{
				if ((this._IdDireccion != value))
				{
					this.OnIdDireccionChanging(value);
					this.SendPropertyChanging();
					this._IdDireccion = value;
					this.SendPropertyChanged("IdDireccion");
					this.OnIdDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatusSistema", DbType="Int NOT NULL")]
		public int IdStatusSistema
		{
			get
			{
				return this._IdStatusSistema;
			}
			set
			{
				if ((this._IdStatusSistema != value))
				{
					if (this._StatusSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusSistemaChanging(value);
					this.SendPropertyChanging();
					this._IdStatusSistema = value;
					this.SendPropertyChanged("IdStatusSistema");
					this.OnIdStatusSistemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSistema_Telefono", Storage="_StatusSistema", ThisKey="IdStatusSistema", OtherKey="Id", IsForeignKey=true)]
		public StatusSistema StatusSistema
		{
			get
			{
				return this._StatusSistema.Entity;
			}
			set
			{
				StatusSistema previousValue = this._StatusSistema.Entity;
				if (((previousValue != value) 
							|| (this._StatusSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSistema.Entity = null;
						previousValue.Telefonos.Remove(this);
					}
					this._StatusSistema.Entity = value;
					if ((value != null))
					{
						value.Telefonos.Add(this);
						this._IdStatusSistema = value.Id;
					}
					else
					{
						this._IdStatusSistema = default(int);
					}
					this.SendPropertyChanged("StatusSistema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.TipoLocal")]
	public partial class TipoLocal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoLocal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tienda.TipoOferta")]
	public partial class TipoOferta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<Oferta> _Ofertas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoOferta()
		{
			this._Ofertas = new EntitySet<Oferta>(new Action<Oferta>(this.attach_Ofertas), new Action<Oferta>(this.detach_Ofertas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoOferta_Oferta", Storage="_Ofertas", ThisKey="Id", OtherKey="IdTipoOferta")]
		public EntitySet<Oferta> Ofertas
		{
			get
			{
				return this._Ofertas;
			}
			set
			{
				this._Ofertas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ofertas(Oferta entity)
		{
			this.SendPropertyChanging();
			entity.TipoOferta = this;
		}
		
		private void detach_Ofertas(Oferta entity)
		{
			this.SendPropertyChanging();
			entity.TipoOferta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.vUsuariosSistemas")]
	public partial class vUsuariosSistema
	{
		
		private int _Id;
		
		private string _Usuario;
		
		private string _Passwd;
		
		private int _IdRol;
		
		private int _IdSistema;
		
		private string _Sistema;
		
		private string _URL;
		
		public vUsuariosSistema()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this._Usuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwd", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Passwd
		{
			get
			{
				return this._Passwd;
			}
			set
			{
				if ((this._Passwd != value))
				{
					this._Passwd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", DbType="Int NOT NULL")]
		public int IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					this._IdRol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSistema", DbType="Int NOT NULL")]
		public int IdSistema
		{
			get
			{
				return this._IdSistema;
			}
			set
			{
				if ((this._IdSistema != value))
				{
					this._IdSistema = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sistema", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Sistema
		{
			get
			{
				return this._Sistema;
			}
			set
			{
				if ((this._Sistema != value))
				{
					this._Sistema = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
